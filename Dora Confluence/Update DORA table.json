{
    "id": "e11cc881-a374-4659-b3cb-a83edb13215b",
    "permanent_id": "01ede01f-fa8d-478f-b00b-883db7724e78",
    "name": "Update DORA table",
    "description": "",
    "trigger_type": "scheduled",
    "trigger_template_type": "scheduled",
    "enabled": true,
    "nodes_dirty": true,
    "ui_data": {
        "nodes": {
            "0": {
                "id": "0",
                "type": "trigger",
                "description": "Scheduled - Trigger for Propels to run on a specific schedule.",
                "ports": {
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "cron": {
                        "key": "cron",
                        "type": "text",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Schedule",
                        "description": "Specify a schedule using the UNIX cron format to trigger the Propel (the Propel won't run until the cron triggers for the first time).",
                        "index": 0
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "type": "text",
                        "values": [
                            {
                                "value": "-1",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Interval in minutes",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the Propel periodically, starting immediately. Use -1 as a special value to trigger the Propel only once. It will trigger again every time the Propel is updated.",
                        "index": 0
                    }
                },
                "output": {
                    "cron": {
                        "key": "cron",
                        "display_name": "Schedule",
                        "type": "text",
                        "description": "Specify a schedule using the UNIX cron format to trigger the Propel (the Propel won't run until the cron triggers for the first time).",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "display_name": "Interval in minutes",
                        "type": "text",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the Propel periodically, starting immediately. Use -1 as a special value to trigger the Propel only once. It will trigger again every time the Propel is updated.",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    }
                },
                "options": [],
                "position": {
                    "x": 300,
                    "y": 50
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Scheduled",
                "trigger_type": {
                    "label": "manual",
                    "key": "manual"
                },
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "1": {
                "id": "1",
                "type": "get_time_range",
                "description": "Get the start and end timestamps based on the specified time period",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "truncate": {
                        "key": "truncate",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Truncate To Day",
                        "index": 20
                    },
                    "time_period": {
                        "key": "time_period",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "Last_Month",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Last_Day",
                            "Last_Week",
                            "Last_Month",
                            "Last_Quarter",
                            "Last_Six_Months",
                            "Last_Year"
                        ],
                        "default_value": "Last_Day",
                        "display_name": "Time Period",
                        "description": "Time period to get the start and end timestamps.",
                        "index": 10
                    }
                },
                "output": {
                    "end_ts": {
                        "key": "end_ts",
                        "display_name": "end_ts",
                        "value_type": "string",
                        "hidden": false
                    },
                    "start_ts": {
                        "key": "start_ts",
                        "display_name": "start_ts",
                        "value_type": "string",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 299,
                    "y": 165
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Get Time Range In Epoch",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "2": {
                "id": "2",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // propels.serviceName().doSomething() - invoke a service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 295,
                    "y": 280
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Params",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "3": {
                "id": "3",
                "type": "levelops_query",
                "description": "Query the SEI API",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/org/units/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "API key to authenticate to SEI.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, only public APIs can be reached.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page\": 0,\n    \"page_size\": 50,\n    \"filter\": {\n        \"ou_category_id\": [\n            \"a238d869-4d78-4894-bf88-202140843a59\"\n        ]\n    }\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 295,
                    "y": 409
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Fetch ous",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "4": {
                "id": "4",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // propels.serviceName().doSomething() - invoke a service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 295,
                    "y": 540
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Filter Ous",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "5": {
                "id": "5",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${3.json_body.records}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_schema": {}
                    }
                },
                "options": [],
                "position": {
                    "x": 294,
                    "y": 656
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Item In List",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "6": {
                "id": "6",
                "type": "levelops_query",
                "description": "Query the SEI API",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "/v1/velocity",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "API key to authenticate to SEI.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, only public APIs can be reached.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"calculation\": \"ticket_velocity\",\n        \"ratings\": [\n            \"good\",\n            \"slow\",\n            \"needs_attention\"\n        ],\n        \"jira_issue_types\": [\n            \"STORY\",\n            \"TASK\"\n        ],\n        \"jira_resolutions\": [\n            \"DONE\",\n            \"FIXED\"\n        ],\n        \"velocity_config_id\": \"d9f5c73a-37b1-41dc-b5f1-0815f423dff5\",\n        \"limit_to_only_applicable_data\": false,\n        \"integration_ids\": [\n            \"3\"\n        ],\n        \"work_items_type\": \"jira\",\n        \"jira_issue_created_at\": {\n            \"$gt\": \"${1.start_ts}\",\n            \"$lt\": \"${1.end_ts}\"\n        }\n    },\n    \"across\": \"velocity\",\n    \"ou_ids\": [\n        \"${5.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"customfield_10012\"\n        ]\n    },\n    \"widget_id\": \"56c810c0-56ee-11ec-b47e-bf9c76b2f95d\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 294,
                    "y": 787
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "lead time",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "7": {
                "id": "7",
                "type": "levelops_query",
                "description": "Query the SEI API",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "/v1/velocity",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "API key to authenticate to SEI.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, only public APIs can be reached.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"calculation\": \"ticket_velocity\",\n        \"ratings\": [\n            \"good\",\n            \"slow\",\n            \"needs_attention\"\n        ],\n        \"jira_priorities\": [\n            \"1 - BLOCKER\",\n            \"2 - CRITICAL\",\n            \"3 - MAJOR\"\n        ],\n        \"jira_issue_types\": [\n            \"PRODUCTION BUG\"\n        ],\n        \"velocity_config_id\": \"077864bf-ec25-40cb-a37b-07d39c164117\",\n        \"jira_issue_resolved_at\": {\n            \"$gt\": \"${1.start_ts}\",\n            \"$lt\": \"${1.end_ts}\"\n        },\n        \"limit_to_only_applicable_data\": false,\n        \"integration_ids\": [\n            \"3\", \"4\"\n        ],\n        \"work_items_type\": \"jira\"\n    },\n    \"across\": \"velocity\",\n    \"ou_ids\": [\n       \"${5.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"customfield_10012\"\n        ]\n    },\n    \"widget_id\": \"129c7070-4272-11ec-963f-f58904b15c25\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 301,
                    "y": 914
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "mttr",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "8": {
                "id": "8",
                "type": "levelops_query",
                "description": "Query the SEI API",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/dora/change_failure_rate",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "API key to authenticate to SEI.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, only public APIs can be reached.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"time_range\": {\n            \"$gt\": \"${1.start_ts}\",\n            \"$lt\": \"${1.end_ts}\" }\n        },\n        \"ou_ids\": [\n       \"${5.item.id}\"\n    ]\n     \n\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 302,
                    "y": 1034
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "failure rate",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "9": {
                "id": "9",
                "type": "levelops_query",
                "description": "Query the SEI API",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "/v1/scm/dora/deployment_frequency",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "API key to authenticate to SEI.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, only public APIs can be reached.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": \"resolve\",\n        \"pr_merged_at\": {\n            \"$gt\": \"${1.start_ts}\",\n            \"$lt\": \"${1.end_ts}\"\n        },\n        \"velocity_config_id\": \"8672b9a6-962b-4156-93b3-45fe48c3434d\",\n        \"integration_ids\": [\n            \"3\",\n            \"4\"\n        ]\n    },\n    \"ou_ids\": [\n        \"${5.item.id}\"\n    ],\n    \"widget_id\": \"ae2692a0-d138-11ec-9bc8-51987dd0ca45\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 298,
                    "y": 1163
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "frequency",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "10": {
                "id": "10",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "leadTime",
                                    "value": "${6.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "mttr",
                                    "value": "${7.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "failRate",
                                    "value": "${8.json_body}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "frequency",
                                    "value": "${9.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ou",
                                    "value": "${5.item}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "function getFormattedDate(date) {\n  var year = date.getFullYear();\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : '0' + month;\n  var day = date.getDate().toString();\n  day = day.length > 1 ? day : '0' + day;\n  return month + '/' + day + '/' + year;\n}\n\n\nfunction handleNode(context) {\n    mttrRecords = JSON.parse(context.getParam('mttr'));\n    leadTimeRecords = JSON.parse(context.getParam('leadTime'));\n    failRate = context.getParam('failRate') ? JSON.parse(context.getParam('failRate')) : {};\n    failRate = failRate.stats || {};\n    frequency = JSON.parse(context.getParam('frequency'))[0];\n    ou = JSON.parse(context.getParam('ou'));\n    \n  var hideStage = [\n  \"Approval Time\",\n  \"Merge Time\",\n  \"Lead time to first commit\",\n  \"PR Creation Time\",\n  \"Time to First Comment\"\n];\n  var val = 0;\n  \n  var mttrRecords  = mttrRecords.filter(item => !hideStage.includes(item.key));\n\n  \n  mttr = ((mttrRecords.reduce((sum,ittr) => {\n    var val = ittr.mean;\n    /* if(hideStage.includes(ittr.key)){\n      val  = 0;\n  \t} */\n    return sum + val; }, 0)) / 84000).toFixed(2) ;\n  leadTime = ((leadTimeRecords.reduce((sum,ittr) => sum + ittr.mean, 0)) / 84000).toFixed(2);\n  leadtimelowerlimit  = ((leadTimeRecords.reduce((sum,ittr) => sum + ittr.velocity_stage_result.lower_limit_value, 0)));\n  leadtimeupperlimit  = ((leadTimeRecords.reduce((sum,ittr) => sum + ittr.velocity_stage_result.upper_limit_value, 0)));\n\n  \n    mttrtimelowerlimit  = ((mttrRecords.reduce((sum,ittr) => sum + ittr.velocity_stage_result.lower_limit_value, 0)));\n  mttrtimeupperlimit  = ((mttrRecords.reduce((sum,ittr) => sum + ittr.velocity_stage_result.upper_limit_value, 0)));\n  \n  var leadtimecolor = \"red\";\n  var mttrcolor = \"red\";\n  var failratecolor = \"red\";\n  var frequencycolor = \"red\";\n  \n  leadtimecolor = (leadTime < leadtimeupperlimit ) ? \"blue\" : leadtimecolor;\n  leadtimecolor = (leadTime < leadtimelowerlimit ) ? \"green\" : leadtimecolor;\n\n   mttrcolor = (mttr < mttrtimeupperlimit ) ? \"blue\" : mttrcolor;\n  mttrcolor = (mttr < mttrtimelowerlimit ) ? \"green\" : mttrcolor;\n\n     failratecolor = (failRate && failRate.band == \"ELITE\" ) ? \"green\" : failratecolor;\nfailratecolor = (failRate && failRate.band == \"HIGH\" ) ? \"blue\" : failratecolor;\n  \n  \n  \n     frequencycolor = (frequency.band == \"ELITE\" ) ? \"green\" : frequencycolor;\nfrequencycolor = (frequency.band == \"HIGH\" ) ? \"blue\" : frequencycolor;\n  \n  var row = {\n      \"0\": getFormattedDate(new Date()),\n      \"1\": ou.id,\n      \"2\": ou.name,\n      \"3\": leadTime,\n      \"4\": mttr,\n      \"5\": failRate  && failRate.failure_rate ? failRate.failure_rate.toFixed(2) : '--',\n      \"6\": frequency ? frequency.deployment_frequency.toFixed(2) : '--',\n      \"7\" : leadtimecolor,\n      \"8\": mttrcolor,\n      \"9\": failratecolor,\n      \"10\": frequencycolor\n  };\n  \n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      row,\n      mttr,\n      leadTime,\n      'failRateBand': failRate.band,\n      'failure_rate' : failRate.failure_rate,\n      'frequencyBand': frequency.band,\n      'deployment_frequency': frequency.deployment_frequency\n      \n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // propels.serviceName().doSomething() - invoke a service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 301,
                    "y": 1299
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Custom Script",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "12": {
                "id": "12",
                "type": "query_config_table",
                "description": "Query a table.",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "filtering_mode": {
                        "key": "filtering_mode",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Exact match",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Exact match",
                            "Contains",
                            "Starts with"
                        ],
                        "default_value": "Exact match",
                        "display_name": "Filtering mode",
                        "description": "Select how the filters should be evaluated. This applies to all the filters at once.",
                        "index": 40
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "output_mode": {
                        "key": "output_mode",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Return Single Row",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Return Single Row",
                            "Iterate"
                        ],
                        "default_value": "Return Single Row",
                        "display_name": "Output mode",
                        "description": "When returning a single row, only the first match will be returned. When iterating, the rest of the Propel is executed in a loop for each row that matched the filters.",
                        "index": 30
                    },
                    "config_table_filter": {
                        "key": "config_table_filter",
                        "type": "config-table-filter",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Filters",
                        "description": "Specify one or more filters by selecting a column and what value it should contain. The behavior of the filters depends on the filtering mode below.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    }
                },
                "output": {
                    "config_row": {
                        "key": "config_row",
                        "display_name": "config_row",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input_config_table": "config_table_filter",
                        "content_schema": {},
                        "content_type": "json_blob"
                    }
                },
                "options": [
                    "Found",
                    "Not found"
                ],
                "position": {
                    "x": 303,
                    "y": 1448
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Query Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "13": {
                "id": "13",
                "type": "update_config_table",
                "description": "Update a cell of a table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${12.config_row.id} ",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${10.row.3}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 4,
                    "y": 1671
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "14": {
                "id": "14",
                "type": "insert_config_table",
                "description": "Insert a row in the table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "config_row": {
                        "key": "config_row",
                        "type": "text",
                        "values": [
                            {
                                "value": "${10.row}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row",
                        "description": "Create a row",
                        "index": 20
                    }
                },
                "output": {
                    "config_row": {
                        "key": "config_row",
                        "display_name": "config_row",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 527,
                    "y": 1658
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Insert Row in LevelOps Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "15": {
                "id": "15",
                "type": "update_config_table",
                "description": "Update a cell of a table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${12.config_row.id} ",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${10.row.4}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 1,
                    "y": 1782
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "16": {
                "id": "16",
                "type": "update_config_table",
                "description": "Update a cell of a table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${12.config_row.id} ",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${10.row.5}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 0,
                    "y": 1888
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "17": {
                "id": "17",
                "type": "update_config_table",
                "description": "Update a cell of a table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${12.config_row.id} ",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${10.row.6}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 5,
                    "y": 1997
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "18": {
                "id": "18",
                "type": "update_config_table",
                "description": "Update a cell of a table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${12.config_row.id} ",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${10.row.7}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 0,
                    "y": 2105
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "19": {
                "id": "19",
                "type": "update_config_table",
                "description": "Update a cell of a table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${12.config_row.id} ",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${10.row.8}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 0,
                    "y": 2238
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "20": {
                "id": "20",
                "type": "update_config_table",
                "description": "Update a cell of a table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${12.config_row.id} ",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${10.row.9}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 0,
                    "y": 2350
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "21": {
                "id": "21",
                "type": "update_config_table",
                "description": "Update a cell of a table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${12.config_row.id}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${10.row.10}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 0,
                    "y": 2471
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            }
        },
        "links": {
            "d98d527b-030d-4acd-8c00-0c6046d28493": {
                "id": "d98d527b-030d-4acd-8c00-0c6046d28493",
                "from": {
                    "nodeId": "1",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "2",
                    "portId": "input"
                },
                "properties": {}
            },
            "22098b37-f7f1-4b1b-92a1-231d0e49b083": {
                "id": "22098b37-f7f1-4b1b-92a1-231d0e49b083",
                "from": {
                    "nodeId": "17",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "18",
                    "portId": "input"
                },
                "properties": {}
            },
            "0705c52e-c2f8-4d1a-95ef-a560da9fab46": {
                "id": "0705c52e-c2f8-4d1a-95ef-a560da9fab46",
                "from": {
                    "nodeId": "12",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "13",
                    "portId": "input"
                },
                "properties": {
                    "option": "Found"
                }
            },
            "1e2891f4-c07c-4266-ba4e-f72bad7f0f9e": {
                "id": "1e2891f4-c07c-4266-ba4e-f72bad7f0f9e",
                "from": {
                    "nodeId": "10",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "12",
                    "portId": "input"
                },
                "properties": {}
            },
            "de5ed6ad-1d02-490c-811c-c55067c1f698": {
                "id": "de5ed6ad-1d02-490c-811c-c55067c1f698",
                "from": {
                    "nodeId": "4",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "5",
                    "portId": "input"
                },
                "properties": {}
            },
            "4fc58d45-5da4-4fe6-a043-ed7a1b8112b0": {
                "id": "4fc58d45-5da4-4fe6-a043-ed7a1b8112b0",
                "from": {
                    "nodeId": "0",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "1",
                    "portId": "input"
                },
                "properties": {}
            },
            "26b52a46-2253-41c3-bf0f-6847f08a0cae": {
                "id": "26b52a46-2253-41c3-bf0f-6847f08a0cae",
                "from": {
                    "nodeId": "5",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "6",
                    "portId": "input"
                },
                "properties": {}
            },
            "41b57344-16f8-489d-a688-414a28437762": {
                "id": "41b57344-16f8-489d-a688-414a28437762",
                "from": {
                    "nodeId": "13",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "15",
                    "portId": "input"
                },
                "properties": {}
            },
            "13589931-1f95-4570-b226-7ff7607ad297": {
                "id": "13589931-1f95-4570-b226-7ff7607ad297",
                "from": {
                    "nodeId": "12",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "14",
                    "portId": "input"
                },
                "properties": {
                    "option": "Not found"
                }
            },
            "7d15c7e4-8708-4b82-87ba-a3b184c34efb": {
                "id": "7d15c7e4-8708-4b82-87ba-a3b184c34efb",
                "from": {
                    "nodeId": "9",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "10",
                    "portId": "input"
                },
                "properties": {}
            },
            "b50585a7-4745-4eda-9308-ba8f16ebe930": {
                "id": "b50585a7-4745-4eda-9308-ba8f16ebe930",
                "from": {
                    "nodeId": "19",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "20",
                    "portId": "input"
                },
                "properties": {}
            },
            "a9bcc258-f4d3-4728-aa59-e6a7034bc6d4": {
                "id": "a9bcc258-f4d3-4728-aa59-e6a7034bc6d4",
                "from": {
                    "nodeId": "3",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "4",
                    "portId": "input"
                },
                "properties": {}
            },
            "c1f93436-c631-462e-9b43-ba76c76bf4a8": {
                "id": "c1f93436-c631-462e-9b43-ba76c76bf4a8",
                "from": {
                    "nodeId": "6",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "7",
                    "portId": "input"
                },
                "properties": {}
            },
            "f100b38d-312f-4a41-b428-285f77bfe22a": {
                "id": "f100b38d-312f-4a41-b428-285f77bfe22a",
                "from": {
                    "nodeId": "7",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "8",
                    "portId": "input"
                },
                "properties": {}
            },
            "0dbf5336-d152-4e82-9502-2492788aa5c3": {
                "id": "0dbf5336-d152-4e82-9502-2492788aa5c3",
                "from": {
                    "nodeId": "8",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "9",
                    "portId": "input"
                },
                "properties": {}
            },
            "215148d2-9b4d-4a42-8d84-3426bf37c3f1": {
                "id": "215148d2-9b4d-4a42-8d84-3426bf37c3f1",
                "from": {
                    "nodeId": "16",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "17",
                    "portId": "input"
                },
                "properties": {}
            },
            "a3285796-5829-471a-93e5-a5bc84a3bc46": {
                "id": "a3285796-5829-471a-93e5-a5bc84a3bc46",
                "from": {
                    "nodeId": "2",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "3",
                    "portId": "input"
                },
                "properties": {}
            },
            "cd562bc9-84e8-4096-b87e-00168a26ee80": {
                "id": "cd562bc9-84e8-4096-b87e-00168a26ee80",
                "from": {
                    "nodeId": "15",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "16",
                    "portId": "input"
                },
                "properties": {}
            },
            "439b85e2-f091-46f2-8731-719bce57cc3a": {
                "id": "439b85e2-f091-46f2-8731-719bce57cc3a",
                "from": {
                    "nodeId": "18",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "19",
                    "portId": "input"
                },
                "properties": {}
            },
            "75774c30-147f-4a5a-a387-b99d2e0199ca": {
                "id": "75774c30-147f-4a5a-a387-b99d2e0199ca",
                "from": {
                    "nodeId": "20",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "21",
                    "portId": "input"
                },
                "properties": {}
            }
        }
    }
}