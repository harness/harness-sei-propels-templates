{
    "id": "8904fca0-6163-408e-921a-a148928f8767",
    "permanent_id": "a8c3313e-1ba5-4015-8622-c512eba671b3",
    "name": "Github Issues Closed Weekly",
    "description": "",
    "trigger_type": "scheduled",
    "trigger_template_type": "scheduled",
    "enabled": true,
    "nodes_dirty": true,
    "ui_data": {
        "nodes": {
            "0": {
                "id": "0",
                "type": "trigger",
                "description": "Scheduled - Trigger for playbooks to run on a specific schedule.",
                "ports": {
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "cron": {
                        "key": "cron",
                        "type": "text",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Schedule",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "index": 0
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "type": "text",
                        "values": [
                            {
                                "value": "0 8 * * *",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Interval in minutes",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "index": 0
                    }
                },
                "output": {
                    "cron": {
                        "key": "cron",
                        "display_name": "Schedule",
                        "type": "text",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "display_name": "Interval in minutes",
                        "type": "text",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    }
                },
                "options": [],
                "position": {
                    "x": 600,
                    "y": 50
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Scheduled",
                "trigger_type": {
                    "label": "manual",
                    "key": "manual"
                },
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "1": {
                "id": "1",
                "type": "get_time_range",
                "description": "Get the start and end timestamps based on the specified time period",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "truncate": {
                        "key": "truncate",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Truncate To Day",
                        "index": 20
                    },
                    "time_period": {
                        "key": "time_period",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "Last_Month",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Last_Day",
                            "Last_Week",
                            "Last_Month",
                            "Last_Quarter",
                            "Last_Six_Months",
                            "Last_Year"
                        ],
                        "default_value": "Last_Day",
                        "display_name": "Time Period",
                        "description": "Time period to get the start and end timestamps.",
                        "index": 10
                    }
                },
                "output": {
                    "end_ts": {
                        "key": "end_ts",
                        "display_name": "end_ts",
                        "value_type": "string",
                        "hidden": false
                    },
                    "start_ts": {
                        "key": "start_ts",
                        "display_name": "start_ts",
                        "value_type": "string",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 594,
                    "y": 476
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Get Time Range In Epoch",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "2": {
                "id": "2",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/scm/issues/aggregate",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"issue_closed_at\": {\n            \"$gt\": \"${1.start_ts}\",\n            \"$lt\": \"${1.end_ts}\"\n        },\n        \"integration_ids\": ${4.integration_ids}\n    },\n    \"across\": \"issue_closed\",\n    \"ou_ids\": [\n        \"${8.item.id}\"\n    ]\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 596,
                    "y": 579
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get Closed Issues",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "3": {
                "id": "3",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "issue_created",
                                    "value": "${2.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ou",
                                    "value": "${8.item}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "/* jshint esversion: 6 */\nfunction handleNode(context) {\n  const issue_created = JSON.parse(context.getParam('issue_created'));\n  const ou = JSON.parse(context.getParam('ou'));\n\n  \n  function groupweek(value, index, array){\n    let byweek={};\n     let d = new Date(0);\n      d.setUTCSeconds(value['key']);\n      // d = Math.floor(d.getTime()/(1000*60*60*24*7));\n      d = getMonday(d);\n      byweek[d]=byweek[d]||[];\n      byweek[d] = value.count;\n    return byweek\n  }\n  function getMonday(d) {\n    d = new Date(d);\n    var day = d.getDay(),\n        diff = d.getDate() - day + (day == 0 ? -6:1); // adjust when day is sunday\n    return new Date(d.setDate(diff)).toISOString().slice(0, 10);\n  }\n\n  var arrRecords = issue_created.map(groupweek);\n  var result = {};\n  const rows = [];\n  arrRecords.forEach(item => {\n    console.log(Object.keys(item)[0])\n    if(!result[Object.keys(item)[0]]) {\n      result[Object.keys(item)[0]] = item[Object.keys(item)[0]]\n    } else {\n      result[Object.keys(item)[0]] = result[Object.keys(item)[0]]  + item[Object.keys(item)[0]];\n    }\n  })\n  \n  Object.keys(result).forEach(day => {\n  \t\trows.push({\n        \t\"0\": ou.id,\n          \t\"1\": day,\n          \t\"2\": result[day]\n        });\n  });\n\n  return { \n    state : 'success',\n    output : { \n      'rows' : rows,\n      'string': JSON.stringify(rows)\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 600,
                    "y": 680
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Weekly Mapping",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "4": {
                "id": "4",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "integration_ids",
                                    "value": "[\"17\"]"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ou_ids",
                                    "value": "[\"43\"]"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ou_category_id",
                                    "value": "ea5afcde-1f06-46d9-8595-429d7bc82e64"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service ou_ids\n  return { \n    state : 'success',\n    output : { \n      \"ou_category_id\": context.getParam('ou_category_id'),\n      \"ou_ids\": JSON.parse(context.getParam('ou_ids')),\n      \"integration_ids\" : JSON.parse(context.getParam('integration_ids'))\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 597,
                    "y": 148
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Parameters",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "5": {
                "id": "5",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${3.rows}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_type": "json_blob"
                    }
                },
                "options": [],
                "position": {
                    "x": 597,
                    "y": 794
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Item In List",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "6": {
                "id": "6",
                "type": "insert_config_table",
                "description": "Insert a row in the LevelOps Table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "config_row": {
                        "key": "config_row",
                        "type": "text",
                        "values": [
                            {
                                "value": "${5.item} ",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row",
                        "description": "Create a row",
                        "index": 20
                    }
                },
                "output": {
                    "config_row": {
                        "key": "config_row",
                        "display_name": "config_row",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 752,
                    "y": 1045
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Insert Row in LevelOps Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "7": {
                "id": "7",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/org/units/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\"page\":0,\"page_size\":50,\"filter\":{\"ou_category_id\":[\"ea5afcde-1f06-46d9-8595-429d7bc82e64\"]}}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 598,
                    "y": 263
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get all ous",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "8": {
                "id": "8",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${7.json_body.records}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_schema": {}
                    }
                },
                "options": [],
                "position": {
                    "x": 594,
                    "y": 366
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Item In List",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "9": {
                "id": "9",
                "type": "query_config_table",
                "description": "Query a LevelOps Table.",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "filtering_mode": {
                        "key": "filtering_mode",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Exact match",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Exact match",
                            "Contains",
                            "Starts with"
                        ],
                        "default_value": "Exact match",
                        "display_name": "Filtering mode",
                        "description": "Select how the filters should be evaluated. This applies to all the filters at once.",
                        "index": 40
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "output_mode": {
                        "key": "output_mode",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Return Single Row",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Return Single Row",
                            "Iterate"
                        ],
                        "default_value": "Return Single Row",
                        "display_name": "Output mode",
                        "description": "When returning a single row, only the first match will be returned. When iterating, the rest of the playbook is executed in a loop for each row that matched the filters.",
                        "index": 30
                    },
                    "config_table_filter": {
                        "key": "config_table_filter",
                        "type": "config-table-filter",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Filters",
                        "description": "Specify one or more filters by selecting a column and what value it should contain. The behavior of the filters depends on the filtering mode below.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    }
                },
                "output": {
                    "config_row": {
                        "key": "config_row",
                        "display_name": "config_row",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input_config_table": "config_table_filter",
                        "content_schema": {},
                        "content_type": "json_blob"
                    }
                },
                "options": [
                    "Found",
                    "Not found"
                ],
                "position": {
                    "x": 592,
                    "y": 918
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Query Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "10": {
                "id": "10",
                "type": "update_config_table",
                "description": "Update a cell of a LevelOps Table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${9.config_row.id}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${5.item.2}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 409,
                    "y": 1040
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            }
        },
        "links": {
            "f47420e1-9af9-4643-b0cf-0e18c79f08af": {
                "id": "f47420e1-9af9-4643-b0cf-0e18c79f08af",
                "from": {
                    "nodeId": "9",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "6",
                    "portId": "input"
                },
                "properties": {
                    "option": "Not found"
                }
            },
            "0fcf958c-893f-45d9-b762-2f878080b344": {
                "id": "0fcf958c-893f-45d9-b762-2f878080b344",
                "from": {
                    "nodeId": "2",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "3",
                    "portId": "input"
                },
                "properties": {}
            },
            "bd138a1f-afde-4548-adfd-f0a66e02cb8f": {
                "id": "bd138a1f-afde-4548-adfd-f0a66e02cb8f",
                "from": {
                    "nodeId": "5",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "9",
                    "portId": "input"
                },
                "properties": {}
            },
            "7997cf33-37bd-43ba-93b2-3dc80f5799be": {
                "id": "7997cf33-37bd-43ba-93b2-3dc80f5799be",
                "from": {
                    "nodeId": "8",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "1",
                    "portId": "input"
                },
                "properties": {}
            },
            "5eec75a9-5f7a-4ab3-a50c-2b38ae733126": {
                "id": "5eec75a9-5f7a-4ab3-a50c-2b38ae733126",
                "from": {
                    "nodeId": "4",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "7",
                    "portId": "input"
                },
                "properties": {}
            },
            "8bd34615-b90b-4b5d-9cc1-de8f891c4db6": {
                "id": "8bd34615-b90b-4b5d-9cc1-de8f891c4db6",
                "from": {
                    "nodeId": "7",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "8",
                    "portId": "input"
                },
                "properties": {}
            },
            "5d6fd081-b42b-46e3-9b00-31f60bf9e2a6": {
                "id": "5d6fd081-b42b-46e3-9b00-31f60bf9e2a6",
                "from": {
                    "nodeId": "0",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "4",
                    "portId": "input"
                },
                "properties": {}
            },
            "79c75ee3-b176-439d-99a6-966afd49bbd2": {
                "id": "79c75ee3-b176-439d-99a6-966afd49bbd2",
                "from": {
                    "nodeId": "9",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "10",
                    "portId": "input"
                },
                "properties": {
                    "option": "Found"
                }
            },
            "d1363a8f-4ca8-485e-a300-2e684f2e123f": {
                "id": "d1363a8f-4ca8-485e-a300-2e684f2e123f",
                "from": {
                    "nodeId": "1",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "2",
                    "portId": "input"
                },
                "properties": {}
            },
            "fd064fd7-cae1-493d-82c5-6e4e1c570bc8": {
                "id": "fd064fd7-cae1-493d-82c5-6e4e1c570bc8",
                "from": {
                    "nodeId": "3",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "5",
                    "portId": "input"
                },
                "properties": {}
            }
        }
    }
}