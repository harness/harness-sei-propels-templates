{
    "id": "80227ef0-7b5c-4d5a-ba85-3265fa51e9ed",
    "permanent_id": "e9d5cdf6-356e-4e65-8367-d29eaf69d896",
    "name": "Org Hygiene Nudges Jira",
    "description": "",
    "trigger_type": "scheduled",
    "trigger_template_type": "scheduled",
    "enabled": true,
    "nodes_dirty": true,
    "ui_data": {
        "nodes": {
            "0": {
                "id": "0",
                "type": "trigger",
                "description": "Scheduled - Trigger for playbooks to run on a specific schedule.",
                "ports": {
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "cron": {
                        "key": "cron",
                        "type": "text",
                        "values": [
                            {
                                "value": "",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Schedule",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "index": 0
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "type": "text",
                        "values": [
                            {
                                "value": "-1",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Interval in minutes",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "index": 0
                    }
                },
                "output": {
                    "cron": {
                        "key": "cron",
                        "display_name": "Schedule",
                        "type": "text",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "display_name": "Interval in minutes",
                        "type": "text",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    }
                },
                "options": [],
                "position": {
                    "x": 444,
                    "y": 53
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Scheduled",
                "trigger_type": {
                    "label": "manual",
                    "key": "manual"
                },
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "1": {
                "id": "1",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "ou_category_id",
                                    "value": "03fdd9d9-4e26-49fb-8240-2fa4c9fb084c"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "integration_id",
                                    "value": "[\"231\"]"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "hygiene_tag_id",
                                    "value": "115"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "base_url",
                                    "value": "https://foo.atlassian.net/browse/"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "sprint_dashboard",
                                    "value": "2"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "jira_issue_types",
                                    "value": "[\"BUG\",\"STORY\"]"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "product_id",
                                    "value": "1"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "agile",
                                    "value": "sprint"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "workspace_id",
                                    "value": "6"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "function handleNode(context) {\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  var agile  = context.getParam('agile');\n  var agile_payload_key = \"sprint_states\";\n  var agile_payload_value = [\"ACTIVE\"];\n  if(agile != 'sprint') {\n    agile_payload_key = \"status_category\";\n  \tagile_payload_value =  [\"IN PROGRESS\"];\n  }\n  return { \n    state : 'success',\n    output : { \n      \"ou_category_id\": context.getParam('ou_category_id'),\n      \"base_url\": context.getParam('base_url'),\n      \"hygiene_tag_id\": context.getParam('hygiene_tag_id'),\n      \"integration_ids\" : JSON.parse(context.getParam('integration_id')),\n      \"jira_issue_types\" : JSON.parse(context.getParam('jira_issue_types')),\n      //\"story_point_field\": context.getParam('story_point_field'),\n      \"product_id\": context.getParam('product_id'),\n      //\"epic_link_field\": context.getParam('epic_link_field'),\n     // \"ac_field\": context.getParam('ac_field'),\n      \"workspace_id\": context.getParam('workspace_id'),\n      \"sprint_dashboard\": context.getParam('sprint_dashboard'),\n      agile_payload_key,\n      agile_payload_value\n      \n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 443,
                    "y": 148
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Params",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "2": {
                "id": "2",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/org/units/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\"page\":0,\"page_size\":1000,\"filter\":{\"ou_category_id\":[\"${1.ou_category_id}\"]}}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 451,
                    "y": 456
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get org units",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "3": {
                "id": "3",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${17.org_units}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_type": "json_blob"
                    }
                },
                "options": [],
                "position": {
                    "x": 452,
                    "y": 650
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Item In OU",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "4": {
                "id": "4",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page\": 0,\n    \"page_size\": 10,\n    \"filter\": {\n        \"issue_types\": ${1.jira_issue_types},\n        \"hideScore\": false,\n        \"product_id\": \"${1.product_id}\",\n        \"integration_ids\": ${1.integration_ids},\n        \"missing_fields\": {\n            \"assignee\": true\n        },\n        \"hygiene_types\": [],\n        \"${1.agile_payload_key}\":${1.agile_payload_value}\n    },\n    \"across\": \"project\",\n    \"ou_ids\": [\n        \"${3.item.id}\"\n    ],\n    \"ou_exclusions\": [\n        \"hygiene_types\"\n    ]\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 451,
                    "y": 752
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "No Assignee",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "5": {
                "id": "5",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page\": 0,\n    \"page_size\": 10,\n    \"filter\": {\n        \"issue_types\": ${1.jira_issue_types},\n        \"hideScore\": false,\n        \"product_id\": \"${1.product_id}\",\n        \"integration_ids\": ${1.integration_ids},\n        \"hygiene_types\": [\"IDLE\"],\n        \"${1.agile_payload_key}\":${1.agile_payload_value}\n    },\n    \"across\": \"project\",\n    \"ou_ids\": [\n        \"${3.item.id}\"\n    ],\n    \"ou_exclusions\": [\n        \"hygiene_types\"\n    ]\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 448,
                    "y": 859
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "IDLE",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "6": {
                "id": "6",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page\": 0,\n    \"page_size\": 10,\n    \"filter\": {\n        \"issue_types\": ${1.jira_issue_types},\n        \"hideScore\": false,\n        \"product_id\": \"${1.product_id}\",\n        \"integration_ids\": ${1.integration_ids},\n        \"hygiene_types\": [\n            \"POOR_DESCRIPTION\"\n        ],\n        \"${1.agile_payload_key}\":${1.agile_payload_value}\n    },\n    \"across\": \"project\",\n    \"ou_ids\": [\n        \"${3.item.id}\"\n    ],\n    \"ou_exclusions\": [\n        \"hygiene_types\"\n    ]\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 451,
                    "y": 1103
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "poor desc",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "7": {
                "id": "7",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page\": 0,\n    \"page_size\": 10,\n    \"filter\": {\n        \"exclude\": {\n            \"custom_fields\": {}\n        },\n        \"issue_types\": ${1.jira_issue_types},\n        \"hideScore\": false,\n        \"product_id\": \"${1.product_id}\",\n        \"integration_ids\": ${1.integration_ids},\n        \"missing_fields\": {\n            \"${22.sp}\": true\n        },\n        \"hygiene_types\": [],\n        \"${1.agile_payload_key}\":${1.agile_payload_value}\n    },\n    \"across\": \"project\",\n    \"ou_ids\": [\n        \"${3.item.id}\"\n    ],\n    \"ou_exclusions\": [\n        \"hygiene_types\"\n    ]\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 451,
                    "y": 979
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Story points missing",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "8": {
                "id": "8",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page\": 0,\n    \"page_size\": 10,\n    \"filter\": {\n        \"issue_types\": ${1.jira_issue_types},\n        \"hideScore\": false,\n        \"product_id\": \"${1.product_id}\",\n        \"integration_ids\": ${1.integration_ids},\n        \"missing_fields\": {\n            \"${22.ac}\": true\n        },\n        \"hygiene_types\": [],\n        \"${1.agile_payload_key}\":${1.agile_payload_value}\n    },\n    \"across\": \"project\",\n    \"ou_ids\": [\n        \"${3.item.id}\"\n    ],\n    \"ou_exclusions\": [\n        \"hygiene_types\"\n    ]\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 456,
                    "y": 1411
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "missing ac",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "9": {
                "id": "9",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/tags/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\"filter\":{\"tag_ids\": ${3.item.tags}}}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 455,
                    "y": 1947
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get org unit tags",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "13": {
                "id": "13",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "org_unit",
                                    "value": "${3.item}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "no_assignee",
                                    "value": "${4.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "idle",
                                    "value": "${5.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "sp_missing",
                                    "value": "${7.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "poor_desc",
                                    "value": "${6.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "missing_ac",
                                    "value": "${8.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "base_url",
                                    "value": "${1.base_url}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "sprint_dashboard",
                                    "value": "${1.sprint_dashboard}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "workspace_id",
                                    "value": "${1.workspace_id}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "large_stories",
                                    "value": "${19.json_body.records}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "\nfunction handleNode(context) {\n  var org_unit = JSON.parse(context.getParam('org_unit'));\n  var no_assignee = JSON.parse(context.getParam('no_assignee'));\n  var poor_desc = JSON.parse(context.getParam('poor_desc'));\n  var missing_ac = JSON.parse(context.getParam('missing_ac'));\n  var sp_missing = JSON.parse(context.getParam('sp_missing'));\n  var idle = JSON.parse(context.getParam('idle'));\n    var large_stories = JSON.parse(context.getParam('large_stories'));\n\n  var workspace_id = context.getParam('workspace_id');\n  var sprint_dashboard = context.getParam('sprint_dashboard');\n  // var tags = JSON.parse(context.getParam('org_unit_tags'));\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  \n  var email_message = \"<div style='border: 1px solid; padding: 24px'><h3>Hygiene Misses</h3>\";\n  var slack_message = \"Hygiene Misses \\n\\n\";\n  var hasHygieneMiss = false;\n  var base_url = context.getParam('base_url');\n  \n\n  var addTableRow = function (vals, isHeader) {\n    var rowHtml = '<tr>';\n    isHeader = isHeader || false;\n    vals.forEach(function(val) {\n      rowHtml += (isHeader ? '<th>' : '<td>') + val + (isHeader ? '</th>' : '</td>');\n    });\n    rowHtml += '</tr>';\n    email_message += rowHtml;\n  };\n  \n  \n  if(no_assignee && no_assignee.length > 0) {\n    hasHygieneMiss = true;\n    email_message += \"<h4>No Assignee</h4>\";\n    email_message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%; \">';\n    addTableRow([\"Issue\", \"Summary\", \"Assignee\", \"Labels\"], true);\n    slack_message += \"\\n\" + \"No Assignee\" + \"\\n\";\n  \tno_assignee.forEach(function(entry) {\n         slack_message +=  \"<\"+  base_url+entry.key + \"| \" + entry.key + \">\" +\" -- \"+ entry.summary + '\\n';\n         addTableRow([\"<a href='\"+ base_url+entry.key +\"'>\"+ entry.key +\"</a>\", entry.summary, entry.assignee, entry.labels.toString()]); \n    });\n    email_message += \"</table>\";\n  }\n\n  if(poor_desc && poor_desc.length > 0) {\n    hasHygieneMiss = true;\n    email_message += \"<h4>Poor Description</h4>\";\n    email_message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%;\">';\n    addTableRow([\"Issue\", \"Summary\", \"Assignee\", \"Labels\"], true);\n    slack_message += \"\\n\" + \"Poor Description\" + \"\\n\";\n  \tpoor_desc.forEach(function(entry) {\n       slack_message +=  \"<\"+  base_url+entry.key + \"| \" + entry.key + \">\" +\" -- \"+ entry.summary + \", Assignee -- \" + entry.assignee + '\\n';\n\t\taddTableRow([\"<a href='\"+ base_url+entry.key +\"'>\"+ entry.key +\"</a>\", entry.summary, entry.assignee, entry.labels.toString()]); \n    });\n    email_message += \"</table>\";\n  }\n  \n  if(missing_ac.length > 0) {\n    hasHygieneMiss = true;\n    email_message += \"<h4>Missing acceptance criteria</h4>\";\n    email_message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%;\">';\n    addTableRow([\"Issue\", \"Summary\", \"Assignee\", \"Labels\"], true); \n    slack_message += \"\\n\" + \"Missing acceptance criteria\" + \"\\n\";\n  \tmissing_ac.forEach(function(entry) {\n       slack_message +=  \"<\"+  base_url+entry.key + \"| \" + entry.key + \">\"+\" -- \"+ entry.summary + \", Assignee -- \" + entry.assignee + '\\n';\n\t\taddTableRow([\"<a href='\"+ base_url+entry.key +\"'>\"+ entry.key +\"</a>\", entry.summary, entry.assignee, entry.labels.toString()]); \n    });\n    email_message += \"</table>\";\n  }\n  \n  if(sp_missing && sp_missing.length > 0) {\n    hasHygieneMiss = true;\n    email_message += \"<h4>Story Points Missing</h4>\";\n    slack_message += \"\\n\" + \"Story Points Missing\" + \"\\n\";\n    email_message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%; \">';\n    addTableRow([\"Issue\", \"Summary\", \"Assignee\", \"Labels\"], true);    \n  \tsp_missing.forEach(function(entry) {\n       slack_message +=  \"<\"+  base_url+entry.key + \"| \" + entry.key + \">\" +\" -- \"+ entry.summary + \", Assignee -- \" + entry.assignee + '\\n';\n\t\taddTableRow([\"<a href='\"+ base_url+entry.key +\"'>\"+ entry.key +\"</a>\", entry.summary, entry.assignee, entry.labels.toString()]);  \n    });\n    email_message += \"</table>\";    \n  }\n  \n  if(idle && idle.length > 0) {\n    hasHygieneMiss = true;\n    email_message += \"<h4>Idle</h4>\";\n     slack_message += \"\\n\" + \"Idle\" + \"\\n\";\n    email_message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%;\">';\n    addTableRow([\"Issue\", \"Summary\", \"Assignee\", \"Labels\"], true);    \n  \tidle.forEach(function(entry) {\n       slack_message +=  \"<\"+  base_url+entry.key + \"| \" + entry.key + \">\" +\" -- \"+ entry.summary +  \", Assignee -- \" + entry.assignee + '\\n';\n\t\taddTableRow([\"<a href='\"+ base_url+entry.key +\"'>\"+ entry.key +\"</a>\", entry.summary, entry.assignee, entry.labels.toString()]);   \n    });\n    email_message += \"</table>\";    \n  }\n  \n   if(large_stories && large_stories.length > 0) {\n     hasHygieneMiss = true;\n    email_message += \"<h4>Large Stories</h4>\";\n      slack_message += \"\\n\" + \"Large Stories\" + \"\\n\";\n    email_message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%;\">';\n    addTableRow([\"Issue\", \"Summary\", \"Assignee\", \"Labels\"], true);    \n  \tlarge_stories.forEach(function(entry) {\n       slack_message += \"<\"+  base_url+entry.key + \"| \" + entry.key + \">\" +\" -- \"+ entry.summary + \", Assignee -- \" + entry.assignee + '\\n';\n\t\taddTableRow([\"<a href='\"+ base_url+entry.key +\"'>\"+ entry.key +\"</a>\", entry.summary, entry.assignee, entry.labels.toString()]);   \n    });\n    email_message += \"</table>\";    \n  }\n  \n email_message+= \"<p></p><p>Please click <a href='https://app.propelo.ai/#/admin/dashboards/\"+ sprint_dashboard +\"?OU=\"+ org_unit.id +\"&workspace_id=\" + workspace_id + \"' target='_blank'>here</a> for more details. </p>\";\n email_message+= \"</div>\";\n  return { \n    state : 'success',\n    output : { \n      'message' : email_message,\n      hasHygieneMiss,\n      slack_message\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 455,
                    "y": 1574
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Format report",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "14": {
                "id": "14",
                "type": "email_notification",
                "description": "Send an Email to a user",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "user_email": {
                        "key": "user_email",
                        "type": "multi-custom-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "users",
                        "search_field": "email",
                        "display_name": "User Emails",
                        "description": "Emails of the recipients. Select from the list, or use a variable (it may contain one or more emails, separated by commas).",
                        "index": 10
                    },
                    "subject": {
                        "key": "subject",
                        "type": "text",
                        "values": [
                            {
                                "value": "Current Sprint Hygiene - ${3.item.name}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Subject",
                        "index": 20
                    },
                    "text": {
                        "key": "text",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "${13.message}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "text",
                        "description": "Text message to send",
                        "index": 30
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 291,
                    "y": 2401
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Send Email notification",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "15": {
                "id": "15",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "tags",
                                    "value": "${9.json_body.records}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "function handleNode(context) {\n  var tags = JSON.parse(context.getParam('tags'));\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  var emails = [];\n  \n  tags.forEach(function(tag){\n    if(tag.name.toLowerCase().includes(\"mailto\")) {\n      var mail = tag.name.toString().split(\":\");\n      var mailid = mail.length && mail[1] && (mail[1].length > 0) > 0? mail[1]: \"\"; \n      emails.push(mailid);\n    }\n  });\n  \n  return { \n    state : 'success',\n    output : { \n      'emails' : emails\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 452,
                    "y": 2081
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get emails",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "16": {
                "id": "16",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${15.emails}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_type": "json_blob"
                    }
                },
                "options": [],
                "position": {
                    "x": 453,
                    "y": 2246
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Email",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "17": {
                "id": "17",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "org_units",
                                    "value": "${2.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "hygiene_tag_id",
                                    "value": "${1.hygiene_tag_id}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  var org_units = JSON.parse(context.getParam('org_units'));\n  var hygiene_tag_id = context.getParam('hygiene_tag_id');\n  // org_units = org_units.filter(function(org) {return org.tags.length > 0;});\n  org_units = org_units.filter(function(org) {return (org.tags.length > 0 && org.tags.includes(hygiene_tag_id));});\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'org_units' : org_units \n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 451,
                    "y": 554
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Filter org unit",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "18": {
                "id": "18",
                "type": "if_condition",
                "description": "Evaluate condition",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "lql": {
                        "key": "lql",
                        "type": "text",
                        "values": [
                            {
                                "value": "${13.hasHygieneMiss} = true",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "LQL",
                        "description": "Use LevelOps Query Language to query the data",
                        "index": 10
                    }
                },
                "output": {
                    "result": {
                        "key": "result",
                        "display_name": "result",
                        "content_type": "boolean",
                        "value_type": "string",
                        "hidden": false
                    }
                },
                "options": [
                    "True",
                    "False"
                ],
                "position": {
                    "x": 454,
                    "y": 1733
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "If Condition",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "19": {
                "id": "19",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page\": 0,\n    \"page_size\": 10,\n    \"filter\": {\n        \"issue_types\": ${1.jira_issue_types},\n        \"hideScore\": false,\n        \"product_id\": \"${1.product_id}\",\n        \"integration_ids\": ${1.integration_ids},\n        \"hygiene_types\": [],\n        \"story_points\":{\"$gt\":\"5\"},\n        \"${1.agile_payload_key}\":${1.agile_payload_value}\n    },\n    \"across\": \"project\",\n    \"ou_ids\": [\n        \"${3.item.id}\"\n    ],\n    \"ou_exclusions\": [\n        \"hygiene_types\"\n    ]\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 455,
                    "y": 1272
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Large Stories",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "20": {
                "id": "20",
                "type": "slack_notification",
                "description": "Send a Slack message to a user",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "user_email": {
                        "key": "user_email",
                        "type": "multi-custom-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "users",
                        "search_field": "email",
                        "display_name": "Recipient Slack Channels or User Emails",
                        "description": "Names of the Slack channels (e.g. 'general'), and/or emails of the recipients. Select an email from the list, or enter a recipient. You can also use a variable (it may contain one or more emails, separated by commas).",
                        "index": 10
                    },
                    "bot_name": {
                        "key": "bot_name",
                        "type": "text",
                        "values": [
                            {
                                "value": "Hygiene",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Bot Name",
                        "description": "Name of the sender in Slack",
                        "index": 20
                    },
                    "text": {
                        "key": "text",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "${13.slack_message}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "text",
                        "description": "Text message to send",
                        "index": 30
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 635,
                    "y": 2402
                },
                "properties": {
                    "icon": "slack"
                },
                "name": "Send Slack notification",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "21": {
                "id": "21",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/integration_configs/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\"filter\":{\"integration_ids\":${1.integration_ids}},\"page\":0,\"page_size\":1000}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 447,
                    "y": 248
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get Jira Fields",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "22": {
                "id": "22",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "custom_fields",
                                    "value": "${21.json_body.records}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "/* jshint esversion: 6 */\n\nfunction handleNode(context) {\n    const records = JSON.parse(context.getParam('custom_fields'));\n    const custom_fields = records[0].config.agg_custom_fields;\n    var acdetails = custom_fields.find(item => item.name === 'Acceptance Criteria');\n    var sprintdetails =  custom_fields.find(item => item.name === 'Sprint');\n    var spdetails = custom_fields.find(item => item.name === 'Story Points');\n    const ac  = acdetails ? acdetails.key : '';\n    const sprint = sprintdetails ? sprintdetails.key: ''; \n    const sp = spdetails? spdetails.key : '';\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'ac' : ac,\n      'sp': sp,\n      'sprint_custom_key': sprint\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 448,
                    "y": 356
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get Custom Fields",
                "size": {
                    "width": 320,
                    "height": 124
                }
            }
        },
        "links": {
            "8255d2a8-6b1a-4772-93bd-05e0196e6dee": {
                "id": "8255d2a8-6b1a-4772-93bd-05e0196e6dee",
                "from": {
                    "nodeId": "4",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "5",
                    "portId": "input"
                },
                "properties": {}
            },
            "31e8cacc-bd76-41e6-830a-f5ee9269094d": {
                "id": "31e8cacc-bd76-41e6-830a-f5ee9269094d",
                "from": {
                    "nodeId": "18",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "9",
                    "portId": "input"
                },
                "properties": {
                    "option": "True"
                }
            },
            "b403b43f-33cd-4f12-91cb-3511a4be1938": {
                "id": "b403b43f-33cd-4f12-91cb-3511a4be1938",
                "from": {
                    "nodeId": "16",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "20",
                    "portId": "input"
                },
                "properties": {}
            },
            "197fa3f3-f7b1-4021-a5ba-de5c4748a65a": {
                "id": "197fa3f3-f7b1-4021-a5ba-de5c4748a65a",
                "from": {
                    "nodeId": "8",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "13",
                    "portId": "input"
                },
                "properties": {}
            },
            "99fbc74c-98f7-4e14-a85b-3df3137ce96d": {
                "id": "99fbc74c-98f7-4e14-a85b-3df3137ce96d",
                "from": {
                    "nodeId": "7",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "6",
                    "portId": "input"
                },
                "properties": {}
            },
            "2dcf221a-b0ec-449e-8747-09b7ece2a110": {
                "id": "2dcf221a-b0ec-449e-8747-09b7ece2a110",
                "from": {
                    "nodeId": "2",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "17",
                    "portId": "input"
                },
                "properties": {}
            },
            "dc65168d-2bdf-488c-9082-760a8aa29f27": {
                "id": "dc65168d-2bdf-488c-9082-760a8aa29f27",
                "from": {
                    "nodeId": "13",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "18",
                    "portId": "input"
                },
                "properties": {}
            },
            "d9c74a17-94c5-41ea-8234-85c3cd850182": {
                "id": "d9c74a17-94c5-41ea-8234-85c3cd850182",
                "from": {
                    "nodeId": "9",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "15",
                    "portId": "input"
                },
                "properties": {}
            },
            "130ea75e-21d5-42d2-97a2-b02f43c23cc2": {
                "id": "130ea75e-21d5-42d2-97a2-b02f43c23cc2",
                "from": {
                    "nodeId": "6",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "19",
                    "portId": "input"
                },
                "properties": {}
            },
            "e2ca3abe-1da0-442c-81fb-4dfd4976832f": {
                "id": "e2ca3abe-1da0-442c-81fb-4dfd4976832f",
                "from": {
                    "nodeId": "16",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "14",
                    "portId": "input"
                },
                "properties": {}
            },
            "0e4e49f3-28c1-4256-9769-ac3f68c1cd69": {
                "id": "0e4e49f3-28c1-4256-9769-ac3f68c1cd69",
                "from": {
                    "nodeId": "19",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "8",
                    "portId": "input"
                },
                "properties": {}
            },
            "09e41897-ded0-4690-b9bb-7cc042e383b2": {
                "id": "09e41897-ded0-4690-b9bb-7cc042e383b2",
                "from": {
                    "nodeId": "3",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "4",
                    "portId": "input"
                },
                "properties": {}
            },
            "2cc4fb8d-127f-4d81-bac0-f4d36bb7d769": {
                "id": "2cc4fb8d-127f-4d81-bac0-f4d36bb7d769",
                "from": {
                    "nodeId": "1",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "21",
                    "portId": "input"
                },
                "properties": {}
            },
            "063566e5-4081-4003-9a54-da6faaebb7e2": {
                "id": "063566e5-4081-4003-9a54-da6faaebb7e2",
                "from": {
                    "nodeId": "5",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "7",
                    "portId": "input"
                },
                "properties": {}
            },
            "c2576ec0-9efd-48cc-97a2-001eab2dabda": {
                "id": "c2576ec0-9efd-48cc-97a2-001eab2dabda",
                "from": {
                    "nodeId": "22",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "2",
                    "portId": "input"
                },
                "properties": {}
            },
            "c983624c-fb2b-49eb-8c9c-9fb19865df36": {
                "id": "c983624c-fb2b-49eb-8c9c-9fb19865df36",
                "from": {
                    "nodeId": "0",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "1",
                    "portId": "input"
                },
                "properties": {}
            },
            "f258340c-3ecb-400c-b508-c937eecc349e": {
                "id": "f258340c-3ecb-400c-b508-c937eecc349e",
                "from": {
                    "nodeId": "21",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "22",
                    "portId": "input"
                },
                "properties": {}
            },
            "8721c336-4e63-4f62-9c09-3a6b6931bd7d": {
                "id": "8721c336-4e63-4f62-9c09-3a6b6931bd7d",
                "from": {
                    "nodeId": "15",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "16",
                    "portId": "input"
                },
                "properties": {}
            },
            "3bc7f21b-1dfa-4102-bc11-9da9123f8412": {
                "id": "3bc7f21b-1dfa-4102-bc11-9da9123f8412",
                "from": {
                    "nodeId": "17",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "3",
                    "portId": "input"
                },
                "properties": {}
            }
        }
    }
}