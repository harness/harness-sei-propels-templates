{
    "id": "35022c50-b524-48f4-bf93-27db603d7f18",
    "permanent_id": "c29a5a85-ca48-46a5-a692-33e3683f023b",
    "name": "Issue active state > 6 days",
    "description": "",
    "trigger_type": "scheduled",
    "trigger_template_type": "scheduled",
    "enabled": true,
    "nodes_dirty": true,
    "ui_data": {
        "nodes": {
            "0": {
                "id": "0",
                "type": "trigger",
                "description": "Scheduled - Trigger for playbooks to run on a specific schedule.",
                "ports": {
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "cron": {
                        "key": "cron",
                        "type": "text",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Schedule",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "index": 0
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "type": "text",
                        "values": [
                            {
                                "value": "-1",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Interval in minutes",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "index": 0
                    }
                },
                "output": {
                    "cron": {
                        "key": "cron",
                        "display_name": "Schedule",
                        "type": "text",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "display_name": "Interval in minutes",
                        "type": "text",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    }
                },
                "options": [],
                "position": {
                    "x": 300,
                    "y": 50
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Scheduled",
                "trigger_type": {
                    "label": "manual",
                    "key": "manual"
                },
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "1": {
                "id": "1",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/org/units/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\"page\":0,\"page_size\":50,\"filter\":{\"ou_category_id\":[\"8cc52459-0876-4d68-bb51-6b4e1d1d75de\"]}}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 300,
                    "y": 260
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get org units",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "2": {
                "id": "2",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 304,
                    "y": 153
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Params",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "3": {
                "id": "3",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${1.json_body.records}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_schema": {}
                    }
                },
                "options": [],
                "position": {
                    "x": 300,
                    "y": 367
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Org Unit",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "4": {
                "id": "4",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/velocity/values",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page\": 0,\n    \"page_size\": 100,\n    \"sort\": [\n        {\n            \"id\": [],\n            \"desc\": true\n        }\n    ],\n    \"filter\": {\n        \"workitem_types\": [\n            \"User Story\"\n        ],\n        \"workitem_statuses\": [\n            \"Active\"\n        ],\n        \"velocity_config_id\": \"7b709a71-af4d-4b6a-aa0c-7ee43d96af49\",\n        \"limit_to_only_applicable_data\": false,\n        \"calculation\": \"ticket_velocity\",\n        \"integration_ids\": [\n            \"1\"\n        ],\n        \"work_items_type\": \"work_item\",\n        \"histogram_stage_name\": \"Active\"\n    },\n    \"across\": \"values\",\n    \"ou_ids\": [\n        \"${3.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"sprint_report\"\n        ]\n    },\n    \"ou_exclusions\": [\n        \"values\"\n    ]\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 299,
                    "y": 663
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get Issues",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "5": {
                "id": "5",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "issues",
                                    "value": "${4.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "threshold",
                                    "value": "6"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  var issues = JSON.parse(context.getParam('issues'));\n  var threshold = context.getParam('threshold');\n  var time = threshold * 86400;\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  \n var message = \"\"; \n\n  var addTableRow = function (vals, isHeader = false) {\n    var rowHtml = '<tr>';\n    vals.forEach(val => {\n      rowHtml += (isHeader ? '<th>' : '<td>') + val + (isHeader ? '</th>' : '</td>');\n    });\n    rowHtml += '</tr>';\n    message += rowHtml;\n  };\n  \n\n  \n  message += '<h3>User Stories - Active > 6 days</h3>';\n  message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; \">';\n  addTableRow([\"Id\", \"Title\", \"Active Days\"], true);\n  issues.forEach(function(issue){\n  \tif(issue.data[1].mean && (issue.data[1].mean >= (6*86400) && issue.data[1].mean < (15*86400))) {\n      var base_url = \"https://dev.azure.com/eysbp/eysbp/CTP - Core Platform/_workitems/edit/\";\n      var url = \"<a href='\"+ base_url+issue.additional_key +\"'>\"+ issue.additional_key + \"</a>\";\n      addTableRow([url, issue.title, (issue.data[1].mean/86400).toFixed(1) + \" days\"]);\n    }\n  });\n  message+= \"</table>\";\n  message += '<h3>User Stories - Active > 15 days</h3>';\n  message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; \">';\n  addTableRow([\"Id\", \"Title\", \"Active Days\"], true);\n  issues.forEach(function(issue){\n  \tif(issue.data[1].mean && (issue.data[1].mean >= (15*86400) && issue.data[1].mean < (30*86400))) {\n      var base_url = \"https://dev.azure.com/eysbp/eysbp/CTP - Core Platform/_workitems/edit/\";\n      var url = \"<a href='\"+ base_url+issue.additional_key +\"'>\"+ issue.additional_key + \"</a>\";\n      addTableRow([url, issue.title, (issue.data[1].mean/86400).toFixed(1) + \" days\"]);\n    }\n  });\n  message+= \"</table>\";\n  message += '<h3>User Stories - Active > 30 days</h3>';\n  message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; \">';\n  addTableRow([\"Id\", \"Title\", \"Active Days\"], true);\n  issues.forEach(function(issue){\n  \tif(issue.data[1].mean && (issue.data[1].mean >= (30*86400))) {\n      var base_url = \"https://dev.azure.com/eysbp/eysbp/CTP - Core Platform/_workitems/edit/\";\n      var url = \"<a href='\"+ base_url+issue.additional_key +\"'>\"+ issue.additional_key + \"</a>\";\n      addTableRow([url, issue.title, (issue.data[1].mean/86400).toFixed(1) + \" days\"]);\n    }\n  });\n  message+= \"</table>\";\n  return { \n    state : 'success',\n    output : { \n      'message' :message\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 305,
                    "y": 768
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Active > 6days",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "6": {
                "id": "6",
                "type": "email_notification",
                "description": "Send an Email to a user",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "user_email": {
                        "key": "user_email",
                        "type": "multi-custom-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "users",
                        "search_field": "email",
                        "display_name": "User Emails",
                        "description": "Emails of the recipients. Select from the list, or use a variable (it may contain one or more emails, separated by commas).",
                        "index": 10
                    },
                    "subject": {
                        "key": "subject",
                        "type": "text",
                        "values": [
                            {
                                "value": "${3.item.name} - Workitems active for > 6 days",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Subject",
                        "index": 20
                    },
                    "text": {
                        "key": "text",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "${5.message}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "text",
                        "description": "Text message to send",
                        "index": 30
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 299,
                    "y": 865
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Send Email notification",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "7": {
                "id": "7",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "org_unit",
                                    "value": "${3.item}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  var org_unit = JSON.parse(context.getParam(\"org_unit\"));\n  \n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'send_alert' : org_unit.tags.includes(\"1\")\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 302,
                    "y": 458
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Custom Script",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "8": {
                "id": "8",
                "type": "if_condition",
                "description": "Evaluate condition",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "lql": {
                        "key": "lql",
                        "type": "text",
                        "values": [
                            {
                                "value": "${7.send_alert} = true",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "LQL",
                        "description": "Use LevelOps Query Language to query the data",
                        "index": 10
                    }
                },
                "output": {
                    "result": {
                        "key": "result",
                        "display_name": "result",
                        "content_type": "boolean",
                        "value_type": "string",
                        "hidden": false
                    }
                },
                "options": [
                    "True",
                    "False"
                ],
                "position": {
                    "x": 300,
                    "y": 552
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "If Condition",
                "size": {
                    "width": 320,
                    "height": 124
                }
            }
        },
        "links": {
            "ff7a723b-c810-458c-aeb9-59a21918a811": {
                "id": "ff7a723b-c810-458c-aeb9-59a21918a811",
                "from": {
                    "nodeId": "5",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "6",
                    "portId": "input"
                },
                "properties": {}
            },
            "851c1aab-ac72-4338-95f1-d191b727bf7f": {
                "id": "851c1aab-ac72-4338-95f1-d191b727bf7f",
                "from": {
                    "nodeId": "8",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "4",
                    "portId": "input"
                },
                "properties": {
                    "option": "True"
                }
            },
            "90da8dbe-0531-4554-af21-5a1a8951dd92": {
                "id": "90da8dbe-0531-4554-af21-5a1a8951dd92",
                "from": {
                    "nodeId": "3",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "7",
                    "portId": "input"
                },
                "properties": {}
            },
            "50decaaa-e8fc-4b0a-8621-d8647460341f": {
                "id": "50decaaa-e8fc-4b0a-8621-d8647460341f",
                "from": {
                    "nodeId": "1",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "3",
                    "portId": "input"
                },
                "properties": {}
            },
            "081e435c-e704-4849-a242-3ab97d09ac97": {
                "id": "081e435c-e704-4849-a242-3ab97d09ac97",
                "from": {
                    "nodeId": "7",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "8",
                    "portId": "input"
                },
                "properties": {}
            },
            "bc9cdfc4-8129-403f-ad76-1d60b47b4052": {
                "id": "bc9cdfc4-8129-403f-ad76-1d60b47b4052",
                "from": {
                    "nodeId": "0",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "2",
                    "portId": "input"
                },
                "properties": {}
            },
            "c2656590-9975-4023-9fcc-4caf396a74df": {
                "id": "c2656590-9975-4023-9fcc-4caf396a74df",
                "from": {
                    "nodeId": "4",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "5",
                    "portId": "input"
                },
                "properties": {}
            },
            "8c5ef8b8-ea05-4bff-aea0-379401634ada": {
                "id": "8c5ef8b8-ea05-4bff-aea0-379401634ada",
                "from": {
                    "nodeId": "2",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "1",
                    "portId": "input"
                },
                "properties": {}
            }
        }
    }
}