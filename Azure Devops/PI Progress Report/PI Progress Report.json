{
    "id": "8a8be4c3-ad55-4d73-a87e-56687acc9c0e",
    "permanent_id": "08cddbe9-9f6f-48fa-b6d2-5317b1765a6c",
    "name": "PI Progress Report",
    "description": "",
    "trigger_type": "scheduled",
    "trigger_template_type": "scheduled",
    "enabled": false,
    "nodes_dirty": true,
    "ui_data": {
        "nodes": {
            "0": {
                "id": "0",
                "type": "trigger",
                "description": "Scheduled - Trigger for playbooks to run on a specific schedule.",
                "ports": {
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "cron": {
                        "key": "cron",
                        "type": "text",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Schedule",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "index": 0
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "type": "text",
                        "values": [
                            {
                                "value": "-1",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Interval in minutes",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "index": 0
                    }
                },
                "output": {
                    "cron": {
                        "key": "cron",
                        "display_name": "Schedule",
                        "type": "text",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "display_name": "Interval in minutes",
                        "type": "text",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    }
                },
                "options": [],
                "position": {
                    "x": 300,
                    "y": 50
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Scheduled",
                "trigger_type": {
                    "label": "manual",
                    "key": "manual"
                },
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "1": {
                "id": "1",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "ou_category_id",
                                    "value": "8cc52459-0876-4d68-bb51-6b4e1d1d75de"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n//      'root_ous' : [10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27],\n      'root_ous' : [19, 17, 11, 18, 23],\n      \"start_ts\": parseInt(Date.now()/1000 - (86400*730)),\n      \"end_ts\": parseInt(Date.now()/1000),\n      \"ou_category_id\": context.getParam(\"ou_category_id\")\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 300,
                    "y": 142
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Params",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "2": {
                "id": "2",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/org/units/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\"page\":0,\"page_size\":5000,\"filter\":{\"ou_category_id\":[\"8cc52459-0876-4d68-bb51-6b4e1d1d75de\"]}}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 298,
                    "y": 232
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get all org units",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "3": {
                "id": "3",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "org_units",
                                    "value": "${2.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "root_ous",
                                    "value": "${1.root_ous}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "root_org_unit",
                                    "value": "7"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  var org_units = JSON.parse(context.getParam('org_units'));\n  var root_ous = JSON.parse(context.getParam(\"root_ous\"));\n  \n\n  var current_month = new Date(Date.now()).getMonth() + 1;\n  var current_quarter = Math.ceil(current_month/3);\n  var current_year_short = (new Date(Date.now())).getFullYear() - 2000; //2022 -> 22\n  \n  // For EY as they are 6 months ahead in iterations\n  var current_quarterEY = current_quarter + 2;\n  var current_year_shortEY = current_year_short;\n  if(current_quarter == 3) {\n    current_quarterEY = 1;\n    current_year_shortEY = current_year_short + 1;\n  } else if (current_quarter === 4) {\n    current_quarterEY = 2;\n    current_year_shortEY = current_year_short + 1;\n  }\n  \n  \n  var prevQtr1 = current_quarterEY - 1, prevQtr2 = current_quarter - 2;\n  var prevQtrYear1 = current_year_shortEY, prevQtrYear2 = current_year_shortEY;\n  if(current_quarterEY === 2) {\n    prevQtr2 = 4;\n    prevQtrYear2 = current_year_shortEY - 1;\n  } else if (current_quarterEY === 1) {\n    prevQtr1 = 4;\n    prevQtr2 = 3;\n    prevQtrYear1 = current_year_shortEY - 1;\n    prevQtrYear2 = current_year_shortEY - 1;\n  }\n  \n  var org_units_map = org_units.reduce(function(acc, entry){\n    if (!acc[entry.name]) {\n      acc[entry.name] = entry;\n    }\n    return acc;\n  }, {});\n  \n  var filtered_ous = [];\n  org_units.forEach(function(entry){\n    if(root_ous.indexOf(parseInt(entry.id)) > -1) {\n        \n        var key1= entry.name + \" FY \" + prevQtrYear1 + \" - Q\" + prevQtr1;\n        var key2= entry.name + \" FY \" + prevQtrYear2 + \" - Q\" + prevQtr2;\n        var current_qtr_key = entry.name + \" FY \" + current_year_shortEY + \" - Q\" + current_quarterEY;\n        entry[\"prevQtr1Name\"] = key1\n        entry[\"prevQtr2Name\"] = key2;\n\t\tentry[\"hasPrevQtr1\"] = key1.length > 0;\n  \t\tentry[\"hasPrevQtr2\"] = key2.length > 0;\n        entry[\"prevQtr1\"] = org_units_map[key1]? org_units_map[key1].id : \"\";\n        entry[\"prevQtr2\"] = org_units_map[key2]? org_units_map[key2].id : \"\";\n        entry[\"current_pi\"] = org_units_map[current_qtr_key]? org_units_map[current_qtr_key].id : \"\";\n        entry[\"current_pi_key\"] = current_qtr_key;\n      if(entry[\"prevQtr1\"].length > 0 &&  entry[\"current_pi\"].length > 0 ) {\n\t      filtered_ous.push(entry);\n      }\n    }\n    \n  });\n  \n  //FY 23 - Q2.Sprint 3\n  \n  //map root ous, current quarter and prev quarter ous\n  \n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'filtered_ous' : filtered_ous,\n      //'root_ouss': JSON.stringify(root_ous),\n      //'org_unitss': JSON.stringify(org_units)\n      //'filtered_ouss' : JSON.stringify(filtered_ous),\n      'org_units_map': JSON.stringify(org_units_map)\n\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 296,
                    "y": 326
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Custom Script",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "4": {
                "id": "4",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${3.filtered_ous}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_type": "json_blob"
                    }
                },
                "options": [],
                "position": {
                    "x": 296,
                    "y": 419
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Org Unit",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "5": {
                "id": "5",
                "type": "if_condition",
                "description": "Evaluate condition",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "lql": {
                        "key": "lql",
                        "type": "text",
                        "values": [
                            {
                                "value": "${4.item.hasPrevQtr1} = true",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "LQL",
                        "description": "Use LevelOps Query Language to query the data",
                        "index": 10
                    }
                },
                "output": {
                    "result": {
                        "key": "result",
                        "display_name": "result",
                        "content_type": "boolean",
                        "value_type": "string",
                        "hidden": false
                    }
                },
                "options": [
                    "True",
                    "False"
                ],
                "position": {
                    "x": 295,
                    "y": 516
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "If Condition",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "6": {
                "id": "6",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/issue_mgmt/workitems/sprint_metrics_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": [\n            \"creep_done_points\",\n            \"commit_done_points\",\n            \"commit_not_done_points\",\n            \"creep_not_done_points\"\n        ],\n        \"completed_at\": {\n            \"$gt\": \"${1.start_ts}\",\n            \"$lt\": \"${1.end_ts}\"\n        },\n        \"integration_ids\": [\n            \"1\"\n        ]\n    },\n    \"across\": \"sprint\",\n    \"interval\": \"week\",\n    \"ou_ids\": [\n        \"${4.item.prevQtr1}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"sprint_report\"\n        ]\n    },\n    \"widget_id\": \"f6291b80-3a2a-11ed-9b09-9f8c0bfa80bc\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 291,
                    "y": 619
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get -1 qtr iter sp",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "7": {
                "id": "7",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/issue_mgmt/workitems/story_point_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": \"story_point\",\n        \"workitem_statuses\": [\n            \"Closed\",\n            \"Completed\"\n        ],\n        \"integration_ids\": [\n            \"1\"\n        ]\n    },\n    \"across\": \"workitem_type\",\n    \"across_limit\": 20,\n    \"ou_ids\": [\n        \"${4.item.current_pi}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"sprint_report\"\n        ]\n    },\n    \"widget_id\": \"0d46f600-59f4-11ed-86fe-296f0386930f\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 291,
                    "y": 712
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get sp completed",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "8": {
                "id": "8",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/issue_mgmt/workitems/story_point_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": \"story_point\",\n        \"integration_ids\": [\n            \"1\"\n        ]\n    },\n    \"across\": \"workitem_type\",\n    \"across_limit\": 20,\n    \"ou_ids\": [\n        \"${4.item.current_pi}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"sprint_report\"\n        ]\n    },\n    \"widget_id\": \"0d46f600-59f4-11ed-86fe-296f0386930f\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 290,
                    "y": 809
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Total SP",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "9": {
                "id": "9",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/issue_mgmt/workitems/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page\": 0,\n    \"page_size\": 25,\n    \"filter\": {\n        \"metric\": [\n            \"ticket\"\n        ],\n        \"workitem_types\": [\n            \"Feature\"\n        ],\n        \"exclude\": {\n            \"workitem_statuses\": [\n                \"Closed\",\n                \"Completed\",\n                \"On Hold\",\n                \"Removed\",\n                \"Resolved\",\n                \"Inactive\"\n            ]\n        },\n        \"integration_ids\": [\n            \"1\"\n        ],\n        \"workitem_projects\": [\n            \"eysbp/CTP - Core Platform\"\n        ]\n    },\n    \"across\": \"project\",\n    \"ou_ids\": [\n        \"${4.item.current_pi}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"sprint_report\"\n        ]\n    },\n    \"ou_exclusions\": [\n        \"workitem_projects\"\n    ]\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 288,
                    "y": 904
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Open Features list",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "10": {
                "id": "10",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/issue_mgmt/workitems/story_point_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": \"story_point\",\n        \"workitem_statuses\": [\n            \"Completed\",\n            \"Resolved\"\n        ],\n        \"integration_ids\": [\n            \"1\"\n        ]\n    },\n    \"across\": \"workitem_type\",\n    \"across_limit\": 20,\n    \"ou_ids\": [\n        \"${4.item.current_pi}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"sprint_report\"\n        ]\n    },\n    \"widget_id\": \"f3187940-4ee8-11ed-aaa3-b523b503436e\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 288,
                    "y": 1006
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "SP Resolved BD",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "11": {
                "id": "11",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/issue_mgmt/workitems/story_point_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": \"story_point\",\n        \"workitem_priorities\": [\n            \"1\",\n            \"2\"\n        ],\n        \"workitem_statuses\": [\n            \"Completed\",\n            \"Resolved\"\n        ],\n        \"integration_ids\": [\n            \"1\"\n        ]\n    },\n    \"across\": \"workitem_type\",\n    \"across_limit\": 20,\n    \"ou_ids\": [\n        \"${4.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"sprint_report\"\n        ]\n    },\n    \"widget_id\": \"f3187940-4ee8-11ed-aaa3-b523b503436e\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 288,
                    "y": 1107
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Vigh high and high",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "12": {
                "id": "12",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "prev_pi_metric",
                                    "value": "${6.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "total_sp",
                                    "value": "${8.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "sp_completed",
                                    "value": "${7.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "very_high_and_high",
                                    "value": "${11.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "open_features",
                                    "value": "${9.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "sp_resolved_bd",
                                    "value": "${10.json_body.records}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "function handleNode(context) {\n  var prev_pi_metric = JSON.parse(context.getParam('prev_pi_metric'));\n  var open_features = JSON.parse(context.getParam(\"open_features\"));\n  var total_sp = JSON.parse(context.getParam('total_sp'));\n  var sp_completed = JSON.parse(context.getParam('sp_completed'));\n  var sp_resolved_bd = JSON.parse(context.getParam('sp_resolved_bd'));\n//  var ticket_resolved_bd = JSON.parse(context.getParam(\"ticket_resolved_bd\"));\n\n  //var very_high_and_high = JSON.parse(context.getParam(\"very_high_and_high\"));\n  //var all_sprints = JSON.parse(context.getParam(\"all_sprints\"));\n  \n  var message = \"<div style='border: 1px solid; padding: 24px'>\";\n  //message += '<h3> PI Progress report</h3>';\n\n  //message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%;\">';\n    var base_url = \"https://dev.azure.com/eysbp/CTP - Core Platform/_workitems/edit/\";\n\n  var addTableRow = function (vals, isHeader = false) {\n    var rowHtml = '<tr>';\n    vals.forEach(val => {\n      rowHtml += (isHeader ? '<th style=\"text-align: left;\">' : '<td>') + val + (isHeader ? '</th>' : '</td>');\n    });\n    rowHtml += '</tr>';\n    message += rowHtml;\n  };\n  \n  var prev_pi_progress = 0;\n  var sp_completed_sum = 0;\n  prev_pi_metric.forEach(function(entry){\n    prev_pi_progress += entry.delivered_story_points;\n  });\n  \n  var total_sp_map = {}, sp_completed_map = {};\n  \n  if((total_sp.length > 0 && total_sp[0].workitem_type && total_sp[0].workitem_type.records.length > 0) && \n     (sp_completed.length > 0 && sp_completed[0].workitem_type && sp_completed[0].workitem_type.records.length > 0)) {\n    \n      total_sp[0].workitem_type.records.forEach(function(entry){\n        total_sp_map[entry.key] = {\n          'total_tickets': entry.total_tickets, \n          'total_story_points': entry.total_story_points\n        };\n      });\n\n      sp_completed[0].workitem_type.records.forEach(function(entry){\n        sp_completed_sum += entry.total_story_points;\n        sp_completed_map[entry.key] = {\n          'total_tickets': entry.total_tickets, \n          'total_story_points': entry.total_story_points\n        };\n      });\n    \n      message += '<h3>Progress</h3>';\n      message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%;\">';\n      addTableRow([\"Workitem Type\", \"Total workitems\", \"Completed workitems\", \"Total Story Points\", \"Completed Story Points\"], true);\n      Object.keys(total_sp_map).forEach(function(entry){\n        var tkt_completed = sp_completed_map[entry] && sp_completed_map[entry].total_tickets ? sp_completed_map[entry].total_tickets : \"-\";\n        var sp_completed = sp_completed_map[entry] && sp_completed_map[entry].total_story_points ? sp_completed_map[entry].total_story_points : \"-\";\n        addTableRow([entry, total_sp_map[entry].total_tickets, tkt_completed, total_sp_map[entry].total_story_points, sp_completed]);\n      });\n      message += '</table>';\n\n      message += \"</br>\";\n      message += '<p>Historical PI Progress: ' + (prev_pi_progress/(prev_pi_metric.length > 0? prev_pi_metric.length: 1)).toFixed(1) + \" story points per sprint iteration. </p>\";\n\n      //******//\n      var year = (new Date(Date.now())).getFullYear();\n      var current_month = new Date(Date.now()).getMonth() + 1;\n      var current_quarter = Math.ceil(current_month/3);\n      var q_start, q_end;\n      if(current_quarter === 1) {\n        q_start = year + \"/\" + \"01/\" + \"01\";\n        q_end = year + \"/\" + \"03/\" + \"31\";\n      } else if(current_quarter === 2) {\n        q_start = year + \"/\" + \"04/\" + \"01\";\n        q_end = year + \"/\" + \"06/\" + \"30\";\n      } else if(current_quarter === 3) {\n        q_start = year + \"/\" + \"07/\" + \"01\";\n        q_end = year + \"/\" + \"09/\" + \"30\";\n      } else if(current_quarter === 4) { \n        q_start = year + \"/\" + \"10/\" + \"01\";\n        q_end = year + \"/\" + \"12/\" + \"31\";\n      }  \n\n      var pi_start = Date.parse(q_start);\n      var pi_end = Date.parse(q_end);\n\n      var days_passed = (Date.now() - pi_start)/(86400000);\n      var avg_completion_per_iteration = sp_completed_sum;\n      if(days_passed > 14) {\n        avg_completion_per_iteration = (sp_completed_sum/days_passed)*14;\n      }\n\n      message += '<p>*Current PI Progress: ' + avg_completion_per_iteration.toFixed(1) + \" story points per sprint iteration. </p>\";\n    \n  }\n  \n\n  \n  //******//\n  \n  if(open_features.length > 0) {\n    message += '<h3>Open Features</h3>';\n    message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%;\">';\n    addTableRow([\"Id\", \"Summary\", \"Priority\", \"Effort\", \"Status\", \"Target Date\"], true);\n    open_features.sort(function(a,b){\n      return a.custom_fields[\"Microsoft.VSTS.Scheduling.TargetDate\"] - b.custom_fields[\"Microsoft.VSTS.Scheduling.TargetDate\"];\n      //return parseInt(a.priority) - parseInt(b.priority);\n    });\n    open_features.forEach(function(entry) {\n      var date = entry.custom_fields[\"Microsoft.VSTS.Scheduling.TargetDate\"]? new Date(entry.custom_fields[\"Microsoft.VSTS.Scheduling.TargetDate\"]).toLocaleDateString(): \"-\";\n      var url = \"<a href='\"+ base_url+entry.workitem_id +\"'>\"+ entry.workitem_id + \"</a>\";\n      var effort = (entry.attributes && entry.attributes.effort) ? entry.attributes.effort : \"-\";\n      addTableRow([url, entry.summary, entry.priority, effort, entry.status, date]);  \n    });\n    message+= \"</table>\";\n  }  \n\n  var hasDelayedFeatures = false;\n  open_features.forEach(function(entry) {\n    if(entry.custom_fields[\"Microsoft.VSTS.Scheduling.TargetDate\"] < Date.now()) {\n\t\thasDelayedFeatures = true;\n    }\n  });\n  \n  if(hasDelayedFeatures) {\n    message += '<h3>Delayed Features</h3>';\n    message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; width:100%;\">';\n    addTableRow([\"Id\", \"Summary\", \"Priority\", \"Effort\", \"Status\", \"Target Date\"], true);\n    open_features.forEach(function(entry) {\n      if(entry.custom_fields[\"Microsoft.VSTS.Scheduling.TargetDate\"] < Date.now()) {\n        var date = entry.custom_fields[\"Microsoft.VSTS.Scheduling.TargetDate\"]? new Date(entry.custom_fields[\"Microsoft.VSTS.Scheduling.TargetDate\"]).toLocaleDateString(): \"-\";\n        var url = \"<a href='\"+ base_url+entry.workitem_id +\"'>\"+ entry.workitem_id + \"</a>\";\n        var effort = (entry.custom_fields && entry.attributes.effort) ? entry.attributes.effort : \"-\";\n        addTableRow([url, entry.summary, entry.priority, effort, entry.status, date]);  \n      }\n    });  \n    message+= \"</table>\";\n  }\n\n  \n\n\n  \n  return { \n    state : 'success',\n    output : { \n      'message' : message\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 291,
                    "y": 1203
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Custom Script",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "13": {
                "id": "13",
                "type": "email_notification",
                "description": "Send an Email to a user",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "user_email": {
                        "key": "user_email",
                        "type": "multi-custom-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "users",
                        "search_field": "email",
                        "display_name": "User Emails",
                        "description": "Emails of the recipients. Select from the list, or use a variable (it may contain one or more emails, separated by commas).",
                        "index": 10
                    },
                    "subject": {
                        "key": "subject",
                        "type": "text",
                        "values": [
                            {
                                "value": "PI Progress Report - ${4.item.current_pi_key}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Subject",
                        "index": 20
                    },
                    "text": {
                        "key": "text",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "${12.message}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "text",
                        "description": "Text message to send",
                        "index": 30
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 288,
                    "y": 1305
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Send Email notification",
                "size": {
                    "width": 320,
                    "height": 124
                }
            }
        },
        "links": {
            "2b1048ae-7984-47a8-938c-e8cc096daad3": {
                "id": "2b1048ae-7984-47a8-938c-e8cc096daad3",
                "from": {
                    "nodeId": "11",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "12",
                    "portId": "input"
                },
                "properties": {}
            },
            "ee56d619-4896-47ac-84d4-94ff0f45b138": {
                "id": "ee56d619-4896-47ac-84d4-94ff0f45b138",
                "from": {
                    "nodeId": "9",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "10",
                    "portId": "input"
                },
                "properties": {}
            },
            "2d8b3bf3-5a30-4b86-a6f6-355d2a21b894": {
                "id": "2d8b3bf3-5a30-4b86-a6f6-355d2a21b894",
                "from": {
                    "nodeId": "5",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "6",
                    "portId": "input"
                },
                "properties": {
                    "option": "True"
                }
            },
            "47cb2055-0485-4f85-afd4-9712f250a4af": {
                "id": "47cb2055-0485-4f85-afd4-9712f250a4af",
                "from": {
                    "nodeId": "0",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "1",
                    "portId": "input"
                },
                "properties": {}
            },
            "36a0dfcd-3376-4423-bef8-452ccb58b284": {
                "id": "36a0dfcd-3376-4423-bef8-452ccb58b284",
                "from": {
                    "nodeId": "12",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "13",
                    "portId": "input"
                },
                "properties": {}
            },
            "d63e5a17-c23e-4ed7-afad-432df750785e": {
                "id": "d63e5a17-c23e-4ed7-afad-432df750785e",
                "from": {
                    "nodeId": "8",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "9",
                    "portId": "input"
                },
                "properties": {}
            },
            "b04387f3-561d-47b3-b1a6-b713b835cc50": {
                "id": "b04387f3-561d-47b3-b1a6-b713b835cc50",
                "from": {
                    "nodeId": "10",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "11",
                    "portId": "input"
                },
                "properties": {}
            },
            "76349915-a816-4db7-9743-3ec2988dbe2b": {
                "id": "76349915-a816-4db7-9743-3ec2988dbe2b",
                "from": {
                    "nodeId": "4",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "5",
                    "portId": "input"
                },
                "properties": {}
            },
            "5636d90d-9d88-4a61-80c0-a3e2bb695674": {
                "id": "5636d90d-9d88-4a61-80c0-a3e2bb695674",
                "from": {
                    "nodeId": "1",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "2",
                    "portId": "input"
                },
                "properties": {}
            },
            "a3f6e832-ed04-472d-b549-774905664ca4": {
                "id": "a3f6e832-ed04-472d-b549-774905664ca4",
                "from": {
                    "nodeId": "6",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "7",
                    "portId": "input"
                },
                "properties": {}
            },
            "fd02f996-fcc3-4322-a0d5-c077a0070978": {
                "id": "fd02f996-fcc3-4322-a0d5-c077a0070978",
                "from": {
                    "nodeId": "7",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "8",
                    "portId": "input"
                },
                "properties": {}
            },
            "04046f34-b8f7-4d15-bc83-5799c9d30928": {
                "id": "04046f34-b8f7-4d15-bc83-5799c9d30928",
                "from": {
                    "nodeId": "3",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "4",
                    "portId": "input"
                },
                "properties": {}
            },
            "d06097f9-9dab-4f2c-9c00-1bb22b98ed20": {
                "id": "d06097f9-9dab-4f2c-9c00-1bb22b98ed20",
                "from": {
                    "nodeId": "2",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "3",
                    "portId": "input"
                },
                "properties": {}
            }
        }
    }
}
