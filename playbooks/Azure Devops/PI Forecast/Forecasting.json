{
    "id": "0d092faf-28fb-443a-b749-416cbea45b58",
    "permanent_id": "dfa90a02-7e87-46ed-9122-e44d1ba64488",
    "name": "Forecasting",
    "description": "",
    "trigger_type": "scheduled",
    "trigger_template_type": "scheduled",
    "enabled": true,
    "nodes_dirty": true,
    "ui_data": {
        "nodes": {
            "0": {
                "id": "0",
                "type": "trigger",
                "description": "Scheduled - Trigger for playbooks to run on a specific schedule.",
                "ports": {
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "cron": {
                        "key": "cron",
                        "type": "text",
                        "values": [
                            {
                                "value": "0 5 * * *",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Schedule",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "index": 0
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "type": "text",
                        "values": [
                            {
                                "value": "",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Interval in minutes",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "index": 0
                    }
                },
                "output": {
                    "cron": {
                        "key": "cron",
                        "display_name": "Schedule",
                        "type": "text",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "display_name": "Interval in minutes",
                        "type": "text",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    }
                },
                "options": [],
                "position": {
                    "x": 300,
                    "y": 50
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Scheduled",
                "trigger_type": {
                    "label": "manual",
                    "key": "manual"
                },
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "1": {
                "id": "1",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'root_ous' : [ 10, 11, 12, 13, 14, 17, 18, 19, 21, 26, 27, 15, 319, 318, 20],\n      end_date: Math.ceil(Date.now()/1000)\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 298,
                    "y": 146
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Params",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "2": {
                "id": "2",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/org/units/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\"page\":0,\"page_size\":1000,\"filter\":{\"ou_category_id\":[\"8cc52459-0876-4d68-bb51-6b4e1d1d75de\"]}}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 295,
                    "y": 237
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get All ous",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "3": {
                "id": "3",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${4.filtered_ous}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_type": "json_blob"
                    }
                },
                "options": [],
                "position": {
                    "x": 292,
                    "y": 422
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Root OrgUnit",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "4": {
                "id": "4",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "org_units",
                                    "value": "${2.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "root_ous",
                                    "value": "${1.root_ous}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "root_org_unit",
                                    "value": "7"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "prefix = 'hello ';\nfunction handleNode(context) {\n  var org_units = JSON.parse(context.getParam('org_units'));\n  var root_ous = JSON.parse(context.getParam(\"root_ous\"));\n\n\n  var current_month = new Date(Date.now()).getMonth() + 1;\n  var current_quarter = Math.ceil(current_month/3);\n  var current_year = parseInt((new Date(Date.now())).getFullYear() - 2000); //2022 -> 22\n  //var current_quarter = 4;\n  //var current_year = 22; //2022 -> 22\n  \n  // For EY as they are 6 months ahead in iterations\n  var current_quarterEY;\n  var current_year_shortEY = current_year;\n  var prevQtr1, prevQtrYear1, prevQtr2, prevQtrYear2 = \"\";\n  switch(current_quarter) {\n    case 1:\n      current_quarterEY = 3;\n      current_year_shortEY = current_year;\n      prevQtr1 = 2;\n      prevQtrYear1 = current_year;\n      prevQtr2 = 1;\n      prevQtrYear2 = current_year;\n      break;\n    case 2:\n      current_quarterEY = 4;\n      current_year_shortEY = current_year;\n      prevQtr1 = 3;\n      prevQtrYear1 = current_year;\n      prevQtr2 = 2;\n      prevQtrYear2 = current_year - 1;\n      break;\n    case 3:\n      current_quarterEY = 1;\n      current_year_shortEY = current_year + 1;\n      prevQtr1 = 4;\n      prevQtrYear1 = current_year;\n      prevQtr2 = 3;\n      prevQtrYear2 = current_year;\n      break;\n    case 4:\n      current_quarterEY = 2;\n      current_year_shortEY = current_year + 1;\n      prevQtr1 = 1;\n      prevQtrYear1 = current_year + 1;\n      prevQtr2 = 4;\n      prevQtrYear2 = current_year;\n      break;\n  }\n\n//  if(current_quarter == 3) {\n//     current_quarterEY = 1;\n//     current_year_shortEY = current_year_short + 1;\n//   } else if (current_quarter === 4) {\n//     current_quarterEY = 2;\n//     current_year_shortEY = current_year_short + 1;\n//   }\n\n\n//   var prevQtr1 = current_quarterEY - 1, prevQtr2 = current_quarterEY - 2;\n//   var prevQtrYear1 = current_year_shortEY, prevQtrYear2 = current_year_shortEY;\n//   if(current_quarterEY === 2) {\n//     prevQtr2 = 4;\n//     prevQtrYear2 = current_year_shortEY - 1;\n//   } else if (current_quarterEY === 1) {\n//     prevQtr1 = 4;\n//     prevQtr2 = 3;\n//     prevQtrYear1 = current_year_shortEY - 1;\n//     prevQtrYear2 = current_year_shortEY - 1;\n//   }\n\n  var org_units_map = org_units.reduce(function(acc, entry){\n    if (!acc[entry.name]) {\n      acc[entry.name] = entry;\n    }\n    return acc;\n  }, {});\n\n  var filtered_ous = [];\n  org_units.forEach(function(entry){\n    if(root_ous.indexOf(parseInt(entry.id)) > -1) {\n\n      var key1= entry.name + \" FY \" + prevQtrYear1 + \" - Q\" + prevQtr1;\n      var key2= entry.name + \" FY \" + prevQtrYear2 + \" - Q\" + prevQtr2;\n      var current_qtr_key = entry.name + \" FY \" + current_year_shortEY + \" - Q\" + current_quarterEY;\n      entry[\"prevQtr1Name\"] = key1\n      entry[\"prevQtr2Name\"] = key2;\n      entry[\"hasPrevQtr1\"] = key1.length > 0;\n      entry[\"hasPrevQtr2\"] = key2.length > 0;\n      entry[\"prevQtr1\"] = org_units_map[key1]? org_units_map[key1].id : \"\";\n      entry[\"prevQtr2\"] = org_units_map[key2]? org_units_map[key2].id : \"\";\n      entry[\"current_qtr\"] = org_units_map[current_qtr_key]? org_units_map[current_qtr_key].id : \"\";\n\n      if(entry[\"prevQtr1\"].length > 0 &&  entry[\"current_qtr\"].length > 0 ) {\n        filtered_ous.push(entry);\n      }\n    }\n\n  });\n\n  //FY 23 - Q2.Sprint 3\n\n  //map root ous, current quarter and prev quarter ous\n\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'filtered_ous' : filtered_ous,\n      'filtered_ouss' : JSON.stringify(filtered_ous),\n      prevQtrYear1:prevQtrYear1,\n      prevQtrYear2: prevQtrYear2,\n      prevQtr1: prevQtr1,\n      prevQtr2: prevQtr2,\n      current_quarter: current_quarter\n      //'root_ouss': JSON.stringify(root_ous),\n      //'org_unitss': JSON.stringify(org_units)\n      //'filtered_ouss' : JSON.stringify(filtered_ous),\n      //'org_units_map': JSON.stringify(org_units_map)\n\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 294,
                    "y": 330
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Filter",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "5": {
                "id": "5",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/issue_mgmt/workitems/sprint_metrics_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": [\n            \"creep_done_points\",\n            \"commit_done_points\",\n            \"commit_not_done_points\",\n            \"creep_not_done_points\"\n        ],\n        \"completed_at\": {\n            \"$gt\": \"1435708800\",\n            \"$lt\": \"${1.end_date}\"\n        },\n        \"integration_ids\": [\n            \"1\"\n        ]\n    },\n    \"across\": \"sprint\",\n    \"interval\": \"week\",\n    \"ou_ids\": [\n        \"${3.item.prevQtr1}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"sprint_report\"\n        ]\n    },\n    \"widget_id\": \"f6291b80-3a2a-11ed-9b09-9f8c0bfa80bc\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 288,
                    "y": 632
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get -1 qtr iter sp",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "6": {
                "id": "6",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "sprint_metrics_prev_qtr",
                                    "value": "${5.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "org_unit",
                                    "value": "${3.item}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "current_qtr_sp",
                                    "value": "${7.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "current_qtr_ou",
                                    "value": "${3.item.current_qtr}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "\nfunction handleNode(context) {\n  var sprint_metrics_prev_qtr1 = JSON.parse(context.getParam('sprint_metrics_prev_qtr'));\n  var current_qtr_sp = JSON.parse(context.getParam('current_qtr_sp'));\n  var current_qtr_ou = JSON.parse(context.getParam('current_qtr_ou'));\n  var org_unit = JSON.parse(context.getParam('org_unit'));\n  \n  \n  var sp_delivered_prev_qtr1 = [], committed_sp_prev_qtr1 = 0;\n  var total_sp_delivered_prev_qtr = 0;\n  sprint_metrics_prev_qtr1.forEach(function(iter) {\n    //var committed_sp = iter.committed_story_points === 0? 1: iter.committed_story_points;\n    //sp_delivered_prev_qtr1.push(iter.commit_delivered_story_points / committed_sp);\n    committed_sp_prev_qtr1 += iter.committed_story_points;\n    total_sp_delivered_prev_qtr += iter.commit_delivered_story_points;\n  });\n  \n  //var sp_all_iter_prev_qtr1 = sp_delivered_prev_qtr1.reduce(function (x, y) {\n  //   return x + y;\n  //}, 0);\n  \n  //var avg_sp_per_iter_prev_qtr1 = sp_all_iter_prev_qtr1/sp_delivered_prev_qtr1.length;\n  var avg_sp_per_iter_prev_qtr1 = total_sp_delivered_prev_qtr/committed_sp_prev_qtr1;\n  var total_current_qtr_sp = 0;\n  if(current_qtr_sp.length > 0 && current_qtr_sp[0].workitem_created_at.records) {\n    total_current_qtr_sp = current_qtr_sp[0].workitem_created_at.records.reduce(function (acc, y) {\n       return acc + y.total_story_points;\n    }, 0);\n  }\n  \n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      avg_sp_per_iter_prev_qtr1: avg_sp_per_iter_prev_qtr1,\n //     sp_all_iter_prev_qtr1: sp_all_iter_prev_qtr1,\n//      sp_delivered_prev_qtr1: sp_delivered_prev_qtr1,\n      'row' : {\n        \"0\": current_qtr_ou,\n        \"1\": total_current_qtr_sp,\n        \"2\": Math.ceil(total_current_qtr_sp * avg_sp_per_iter_prev_qtr1),\n        \"3\": parseInt(total_sp_delivered_prev_qtr)\n      }\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 280,
                    "y": 845
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Calc report",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "7": {
                "id": "7",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/issue_mgmt/workitems/story_point_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": \"story_point\",\n        \"workitem_created_at\": {\n            \"$gt\": \"1199145600\",\n            \"$lt\": \"${1.end_date}\"\n        },\n        \"integration_ids\": [\n            \"1\"\n        ]\n    },\n    \"across\": \"workitem_created_at\",\n    \"ou_ids\": [\n        \"${3.item.current_qtr}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"sprint_report\"\n        ]\n    },\n    \"widget_id\": \"04020980-48bb-11ed-9823-950ee9ea68c0\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 285,
                    "y": 734
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "get current qtr sp",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "8": {
                "id": "8",
                "type": "if_condition",
                "description": "Evaluate condition",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "lql": {
                        "key": "lql",
                        "type": "text",
                        "values": [
                            {
                                "value": "${3.item.hasPrevQtr1} = true",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "LQL",
                        "description": "Use LevelOps Query Language to query the data",
                        "index": 10
                    }
                },
                "output": {
                    "result": {
                        "key": "result",
                        "display_name": "result",
                        "content_type": "boolean",
                        "value_type": "string",
                        "hidden": false
                    }
                },
                "options": [
                    "True",
                    "False"
                ],
                "position": {
                    "x": 289,
                    "y": 522
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "If Condition",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "9": {
                "id": "9",
                "type": "query_config_table",
                "description": "Query a LevelOps Table.",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "filtering_mode": {
                        "key": "filtering_mode",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Exact match",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Exact match",
                            "Contains",
                            "Starts with"
                        ],
                        "default_value": "Exact match",
                        "display_name": "Filtering mode",
                        "description": "Select how the filters should be evaluated. This applies to all the filters at once.",
                        "index": 40
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "output_mode": {
                        "key": "output_mode",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Return Single Row",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Return Single Row",
                            "Iterate"
                        ],
                        "default_value": "Return Single Row",
                        "display_name": "Output mode",
                        "description": "When returning a single row, only the first match will be returned. When iterating, the rest of the playbook is executed in a loop for each row that matched the filters.",
                        "index": 30
                    },
                    "config_table_filter": {
                        "key": "config_table_filter",
                        "type": "config-table-filter",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Filters",
                        "description": "Specify one or more filters by selecting a column and what value it should contain. The behavior of the filters depends on the filtering mode below.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    }
                },
                "output": {
                    "config_row": {
                        "key": "config_row",
                        "display_name": "config_row",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input_config_table": "config_table_filter",
                        "content_schema": {},
                        "content_type": "json_blob"
                    }
                },
                "options": [
                    "Found",
                    "Not found"
                ],
                "position": {
                    "x": 278,
                    "y": 950
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Query Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "10": {
                "id": "10",
                "type": "insert_config_table",
                "description": "Insert a row in the LevelOps Table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "config_row": {
                        "key": "config_row",
                        "type": "text",
                        "values": [
                            {
                                "value": "${6.row}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row",
                        "description": "Create a row",
                        "index": 20
                    }
                },
                "output": {
                    "config_row": {
                        "key": "config_row",
                        "display_name": "config_row",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 113,
                    "y": 1124
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Insert Row in LevelOps Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "11": {
                "id": "11",
                "type": "update_config_table",
                "description": "Update a cell of a LevelOps Table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${9.config_row.id}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${6.row.3}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 452,
                    "y": 1123
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "12": {
                "id": "12",
                "type": "update_config_table",
                "description": "Update a cell of a LevelOps Table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${9.config_row.id}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${6.row.2}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 454,
                    "y": 1242
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "13": {
                "id": "13",
                "type": "update_config_table",
                "description": "Update a cell of a LevelOps Table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table_column": {
                        "key": "config_table_column",
                        "type": "config-table-column",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Column",
                        "description": "Select a column.",
                        "index": 20,
                        "use_input_fields": {
                            "table_id": "config_table"
                        }
                    },
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "row_id": {
                        "key": "row_id",
                        "type": "text",
                        "values": [
                            {
                                "value": "${9.config_row.id}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row Id",
                        "description": "Id of the row to update",
                        "content_type": "id:config_row",
                        "index": 30
                    },
                    "value": {
                        "key": "value",
                        "type": "text",
                        "values": [
                            {
                                "value": "${6.row.1}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Value",
                        "description": "New value of the cell",
                        "index": 40
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 458,
                    "y": 1366
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Update Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            }
        },
        "links": {
            "9f49a182-f1a4-48e6-a755-2998c0396c89": {
                "id": "9f49a182-f1a4-48e6-a755-2998c0396c89",
                "from": {
                    "nodeId": "0",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "1",
                    "portId": "input"
                },
                "properties": {}
            },
            "8a7cc084-55c6-4fd8-bbfa-bb66c43cbad0": {
                "id": "8a7cc084-55c6-4fd8-bbfa-bb66c43cbad0",
                "from": {
                    "nodeId": "2",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "4",
                    "portId": "input"
                },
                "properties": {}
            },
            "c43b1382-d8a3-47fe-a831-409350076b40": {
                "id": "c43b1382-d8a3-47fe-a831-409350076b40",
                "from": {
                    "nodeId": "9",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "10",
                    "portId": "input"
                },
                "properties": {
                    "option": "Not found"
                }
            },
            "2988f30c-30bd-4c0b-8bff-867f6ebb7299": {
                "id": "2988f30c-30bd-4c0b-8bff-867f6ebb7299",
                "from": {
                    "nodeId": "9",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "11",
                    "portId": "input"
                },
                "properties": {
                    "option": "Found"
                }
            },
            "01754e9b-f7a7-4972-93ac-f72fd4658641": {
                "id": "01754e9b-f7a7-4972-93ac-f72fd4658641",
                "from": {
                    "nodeId": "6",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "9",
                    "portId": "input"
                },
                "properties": {}
            },
            "16586ef6-6a9e-4750-abc8-20a3f0947ec8": {
                "id": "16586ef6-6a9e-4750-abc8-20a3f0947ec8",
                "from": {
                    "nodeId": "1",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "2",
                    "portId": "input"
                },
                "properties": {}
            },
            "f0720e27-3209-4c2b-bb5e-a6a3394889a1": {
                "id": "f0720e27-3209-4c2b-bb5e-a6a3394889a1",
                "from": {
                    "nodeId": "5",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "7",
                    "portId": "input"
                },
                "properties": {}
            },
            "f5c17988-f674-434d-abeb-0212ac3c4242": {
                "id": "f5c17988-f674-434d-abeb-0212ac3c4242",
                "from": {
                    "nodeId": "4",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "3",
                    "portId": "input"
                },
                "properties": {}
            },
            "2b2d3b88-00dc-4a23-a293-9f72a6daf87e": {
                "id": "2b2d3b88-00dc-4a23-a293-9f72a6daf87e",
                "from": {
                    "nodeId": "3",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "8",
                    "portId": "input"
                },
                "properties": {}
            },
            "e838d377-6072-4ea1-8e7e-36aaee7011b8": {
                "id": "e838d377-6072-4ea1-8e7e-36aaee7011b8",
                "from": {
                    "nodeId": "11",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "12",
                    "portId": "input"
                },
                "properties": {}
            },
            "65308675-e0e5-4451-8418-199f25eaf608": {
                "id": "65308675-e0e5-4451-8418-199f25eaf608",
                "from": {
                    "nodeId": "12",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "13",
                    "portId": "input"
                },
                "properties": {}
            },
            "a6b37cc0-7f12-4836-a36b-82e2fafe8312": {
                "id": "a6b37cc0-7f12-4836-a36b-82e2fafe8312",
                "from": {
                    "nodeId": "7",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "6",
                    "portId": "input"
                },
                "properties": {}
            },
            "1eef53a5-8f88-4075-b2e6-a3b4cf5cb6bd": {
                "id": "1eef53a5-8f88-4075-b2e6-a3b4cf5cb6bd",
                "from": {
                    "nodeId": "8",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "5",
                    "portId": "input"
                },
                "properties": {
                    "option": "True"
                }
            }
        }
    }
}
