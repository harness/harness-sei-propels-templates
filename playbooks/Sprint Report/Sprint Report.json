{
    "id": "b417d7d4-8e11-433d-bd21-01a13adeafb5",
    "permanent_id": "976b9f11-0bfe-4574-968d-3aa01b530f53",
    "name": "Sprint Report",
    "description": "Results report to send at the end of each sprint period",
    "trigger_type": "scheduled",
    "trigger_template_type": "scheduled",
    "enabled": true,
    "nodes_dirty": true,
    "settings": {},
    "ui_data": {
        "nodes": {
            "0": {
                "id": "0",
                "type": "trigger",
                "description": "Scheduled - Trigger for playbooks to run on a specific schedule.",
                "ports": {
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "cron": {
                        "key": "cron",
                        "type": "text",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Schedule",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "index": 0
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "type": "text",
                        "values": [
                            {
                                "value": "-1",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Interval in minutes",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "index": 0
                    }
                },
                "output": {
                    "cron": {
                        "key": "cron",
                        "display_name": "Schedule",
                        "type": "text",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "display_name": "Interval in minutes",
                        "type": "text",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    }
                },
                "options": [],
                "position": {
                    "x": 0,
                    "y": 42
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Scheduled",
                "trigger_type": {
                    "label": "manual",
                    "key": "manual"
                },
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "1": {
                "id": "1",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/org/units/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\"page\":0,\"page_size\":50,\"filter\":{}}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 231,
                    "y": 124
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "List OUs",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "2": {
                "id": "2",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${1.json_body.records}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_schema": {}
                    }
                },
                "options": [],
                "position": {
                    "x": 786,
                    "y": 249
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each OU",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "3": {
                "id": "3",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/story_point_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": \"story_point\",\n        \"sort_xaxis\": \"value_high-low\",\n        \"last_sprint\": true,\n        \"custom_fields\": {},\n        \"product_id\": \"14\",\n        \"integration_ids\": [\n            \"1\",\n            \"12\",\n            \"13\",\n            \"14\",\n            \"15\",\n            \"17\",\n            \"2\",\n            \"21\",\n            \"38\",\n            \"39\",\n            \"51\",\n            \"6\",\n            \"7\"\n        ],\n        \"or\": {\n            \"statuses\": [\n                \"BACKLOG\",\n                \"BLOCKED\",\n                \"DONE\"\n            ]\n        }\n    },\n    \"across\": \"customfield_10020\",\n    \"stacks\": [\n        \"issue_type\"\n    ],\n    \"across_limit\": 1,\n    \"sort\": [\n        {\n            \"id\": \"story_points\",\n            \"desc\": true\n        }\n    ],\n    \"ou_ids\": [\n        \" ${2.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"customfield_10020\"\n        ]\n    }\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 481,
                    "y": 307
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Latest Sprint Story Points",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "4": {
                "id": "4",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "sprint",
                                    "value": "${7.item}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ou",
                                    "value": "${2.item.name}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "sprintMetrics",
                                    "value": "${6.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "hygieneAssignee",
                                    "value": "${10.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "hygieneStoryPoints",
                                    "value": "${11.json_body.records}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "leadTime",
                                    "value": "${12.json_body.records}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "function handleNode(context) {\n    var sprint = JSON.parse(context.getParam('sprint'));\n    var ou = context.getParam('ou');\n    var sprintMetrics = JSON.parse(context.getParam('sprintMetrics'));\n    var hygieneAssignee = JSON.parse(context.getParam('hygieneAssignee'));\n    var hygieneStoryPoints = JSON.parse(context.getParam('hygieneStoryPoints'));\n    var leadTime = JSON.parse(context.getParam('leadTime'));\n\n    var message = '<h1>Sprint Report for ' + ou + '</h1>';\n\n    message += '<h2>Sprint: ' + sprint.key + '</h2>';\n\n    message += '<h3>Sprint Status</h3>';\n    message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; \">'\n\n    var addTableRow = function (vals, isHeader = false) {\n        var rowHtml = '<tr>';\n        vals.forEach(val => {\n            rowHtml += (isHeader ? '<th>' : '<td>') + val + (isHeader ? '</th>' : '</td>');\n        });\n        rowHtml += '</tr>';\n        message += rowHtml;\n    };\n    var headers = ['Velocity (Total Points)', 'Total Tickets'];\n    var vals = [sprint.total_story_points, sprint.total_tickets];\n    if (sprintMetrics.length > 0) {\n        var metric = sprintMetrics[0];\n        var deliveredToCommit = Math.round(metric.delivered_story_points / metric.committed_story_points * 100);\n        headers.push('Delivered to Commit');\n        vals.push(deliveredToCommit + '%');\n    }\n    addTableRow(headers, true);\n    addTableRow(vals);\n    message += '</table>';\n\n    message += '<h3>Hygiene Misses</h3>';\n    message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; \">'\n    addTableRow(['Tickets without Assignee', 'Stories/Bugs without Story Points'], true);\n    addTableRow([(hygieneAssignee.length ? hygieneAssignee[0].total_tickets : 0),\n    (hygieneStoryPoints.length ? hygieneStoryPoints[0].total_tickets : 0)]);\n    message += '</table>';\n\n    message += '<h3>Story Point Breakdown</h3>';\n    message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; \">'\n    addTableRow(['Ticket Type', 'Total Tickets', 'Story Points'], true);\n    sprint.stacks.forEach(type => {\n        addTableRow([type.key, type.total_tickets, type.total_story_points]);\n    });\n    message += '</table>';\n\n    if (leadTime.length > 0) {\n        var roundDays = function (secs) {\n            return Math.round(secs / 86400);\n        };\n        var roundDays2 = function (secs) {\n            return Math.round(((secs / 86400) + Number.EPSILON) * 100) / 100;\n        };\n        message += '<h3>Lead Time for Stories and Bugs</h3>';\n        message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; \">'\n        addTableRow(['', 'Average Time (Days)', 'Median Time (Days)', 'P90 (Days)', 'P95 (Days)'], true);\n        var mean = 0, median = 0, p90 = 0, p95 = 0;\n        leadTime.forEach(lt => {\n            mean += lt.mean;\n            median += lt.median;\n            p90 += lt.p90;\n            p95 += lt.p95;\n        });\n        addTableRow(['Overall Lead Time', roundDays(mean), roundDays(median), roundDays(p90), roundDays(p95)]);\n        message += '</table>';\n\n        message += '<h3>Lead Time Breakdown</h3>';\n        message += '<table border=1 cellpadding=5 style=\"border-collapse: collapse; \">'\n        addTableRow(['Stage', 'Average Time (Days)', 'Median Time (Days)', 'P90 (Days)', 'P95 (Days)', 'Rating'], true);\n        leadTime.forEach(lt => {\n            addTableRow([lt.key,\n            roundDays2(lt.mean),\n            roundDays2(lt.median),\n            roundDays2(lt.p90),\n            roundDays2(lt.p95),\n            lt.velocity_stage_result.rating]);\n        });\n        message += '</table>';\n    }\n\n    return {\n        state: 'success',\n        output: {\n            'message': message\n        }\n    };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 313,
                    "y": 849
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Format Report",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "5": {
                "id": "5",
                "type": "email_notification",
                "description": "Send an Email to a user",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "user_email": {
                        "key": "user_email",
                        "type": "multi-custom-dynamic-select",
                        "values": [
                            {
                                "value": "custom|jeff@propelo.ai",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "users",
                        "search_field": "email",
                        "display_name": "User Emails",
                        "description": "Emails of the recipients. Select from the list, or use a variable (it may contain one or more emails, separated by commas).",
                        "index": 10
                    },
                    "subject": {
                        "key": "subject",
                        "type": "text",
                        "values": [
                            {
                                "value": "Sprint Report for ${2.item.name}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Subject",
                        "index": 20
                    },
                    "text": {
                        "key": "text",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "${4.message}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "text",
                        "description": "Text message to send",
                        "index": 30
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 70,
                    "y": 946
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Send Email notification",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "6": {
                "id": "6",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/sprint_metrics_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n  \"filter\": {\n    \"include_issue_keys\": true,\n    \"agg_type\": \"average\",\n    \"completed_at\": {\n      \"$gt\": \"${8.start_ts}\",\n      \"$lt\": \"${8.end_ts}\"\n    },\n    \"creep_buffer\": 86400,\n    \"sprint_count\": 1,\n    \"custom_fields\": {},\n    \"sprint_report\": [\n      \"${7.item.key}\"\n    ],\n    \"product_id\": \"14\",\n    \"integration_ids\": [\n      \"1\",\n      \"12\",\n      \"13\",\n      \"14\",\n      \"15\",\n      \"17\",\n      \"2\",\n      \"21\",\n      \"38\",\n      \"39\",\n      \"51\",\n      \"6\",\n      \"7\"\n    ]\n  },\n  \"ou_ids\": [\n    \"${2.item.id}\"\n  ],\n  \"ou_user_filter_designation\": {\n    \"sprint\": [\n      \"sprint_report\"\n    ]\n  },\n  \"page\": 0,\n  \"page_size\": 1000\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 257,
                    "y": 538
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Sprint Metrics",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "7": {
                "id": "7",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${3.json_body.records}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_schema": {}
                    }
                },
                "options": [],
                "position": {
                    "x": 19,
                    "y": 453
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Sprint",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "8": {
                "id": "8",
                "type": "get_time_range",
                "description": "Get the start and end timestamps based on the specified time period",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "truncate": {
                        "key": "truncate",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Truncate To Day",
                        "index": 20
                    },
                    "time_period": {
                        "key": "time_period",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "Last_Six_Months",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Last_Day",
                            "Last_Week",
                            "Last_Month",
                            "Last_Quarter",
                            "Last_Six_Months",
                            "Last_Year"
                        ],
                        "default_value": "Last_Day",
                        "display_name": "Time Period",
                        "description": "Time period to get the start and end timestamps.",
                        "index": 10
                    }
                },
                "output": {
                    "end_ts": {
                        "key": "end_ts",
                        "display_name": "end_ts",
                        "value_type": "string",
                        "hidden": false
                    },
                    "start_ts": {
                        "key": "start_ts",
                        "display_name": "start_ts",
                        "value_type": "string",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 519,
                    "y": 184
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Get Time Range In Epoch",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "9": {
                "id": "9",
                "type": "if_condition",
                "description": "Evaluate condition",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "lql": {
                        "key": "lql",
                        "type": "text",
                        "values": [
                            {
                                "value": "${3.json_body.count} != 0",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "LQL",
                        "description": "Use LevelOps Query Language to query the data",
                        "index": 10
                    }
                },
                "output": {
                    "result": {
                        "key": "result",
                        "display_name": "result",
                        "content_type": "boolean",
                        "value_type": "string",
                        "hidden": false
                    }
                },
                "options": [
                    "True",
                    "False"
                ],
                "position": {
                    "x": 290,
                    "y": 388
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "If Condition",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "10": {
                "id": "10",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/tickets_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n  \"across\": \"project\",\n  \"filter\": {\n    \"hideScore\": false,\n    \"custom_fields\": {\n      \"customfield_10020\": [\n        \"${7.item.key}\"\n      ]\n    },\n    \"product_id\": \"14\",\n    \"integration_ids\": [\n      \"1\",\n      \"12\",\n      \"13\",\n      \"14\",\n      \"15\",\n      \"17\",\n      \"2\",\n      \"21\",\n      \"38\",\n      \"39\",\n      \"51\",\n      \"6\",\n      \"7\"\n    ],\n    \"or\": {\n      \"statuses\": [\n        \"BACKLOG\",\n        \"BLOCKED\",\n        \"DONE\"\n      ]\n    },\n    \"hygiene_types\": [\n      \"NO_ASSIGNEE\"\n    ]\n  },\n  \"ou_ids\": [\n    \"${2.item.id}\"\n  ],\n  \"ou_user_filter_designation\": {\n    \"sprint\": [\n      \"customfield_10020\"\n    ]\n  }\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 568,
                    "y": 586
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Hygiene: No Assignee",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "11": {
                "id": "11",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/tickets_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n  \"page_size\": 0,\n  \"page\": 0,\n  \"across\": \"project\",\n  \"filter\": {\n    \"exclude\": {\n      \"custom_fields\": {}\n    },\n    \"issue_types\": [\n      \"STORY\",\n      \"BUG\"\n    ],\n    \"custom_fields\": {\n      \"customfield_10020\": [\n        \"${7.item.id}\"\n      ]\n    },\n    \"hideScore\": false,\n    \"product_id\": \"14\",\n    \"integration_ids\": [\n      \"1\",\n      \"12\",\n      \"13\",\n      \"14\",\n      \"15\",\n      \"17\",\n      \"2\",\n      \"21\",\n      \"38\",\n      \"39\",\n      \"51\",\n      \"6\",\n      \"7\"\n    ],\n    \"or\": {\n      \"statuses\": [\n        \"BACKLOG\",\n        \"BLOCKED\",\n        \"DONE\"\n      ]\n    },\n    \"missing_fields\": {\n      \"customfield_10030\": true\n    },\n    \"hygiene_types\": []\n  },\n  \"ou_ids\": [\n    \"${2.item.id}\"\n  ],\n  \"ou_user_filter_designation\": {\n    \"sprint\": [\n      \"customfield_10020\"\n    ]\n  }\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 813,
                    "y": 668
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Hygiene: No Story Points",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "12": {
                "id": "12",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/velocity",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n  \"filter\": {\n    \"calculation\": \"ticket_velocity\",\n    \"last_sprint\": false,\n    \"jira_issue_types\": [\n      \"STORY\",\n      \"BUG\"\n    ],\n    \"velocity_config_id\": \"bfbaf906-c06a-40e0-90d9-ba924bbd5f8f\",\n    \"jira_issue_resolved_at\": {\n      \"$gt\": \"${8.start_ts}\",\n      \"$lt\": \"${8.end_ts}\"\n    },\n    \"limit_to_only_applicable_data\": false,\n    \"product_id\": \"14\",\n    \"integration_ids\": [\n      \"1\",\n      \"12\",\n      \"13\",\n      \"14\",\n      \"15\",\n      \"17\",\n      \"2\",\n      \"21\",\n      \"31\",\n      \"38\",\n      \"39\",\n      \"51\",\n      \"6\",\n      \"7\"\n    ],\n    \"jira_custom_fields\": {\n      \"customfield_10020\": [\n        \"${7.item.key}\"\n      ]\n    }\n  },\n  \"across\": \"velocity\",\n  \"ou_ids\": [\n    \"${2.item.id}\"\n  ],\n  \"ou_user_filter_designation\": {\n    \"sprint\": [\n      \"customfield_10020\"\n    ]\n  }\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 583,
                    "y": 760
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Lead Time",
                "size": {
                    "width": 320,
                    "height": 124
                }
            }
        },
        "links": {
            "0a3ff0cc-fd84-4c22-8063-a8dd7f7927fa": {
                "id": "0a3ff0cc-fd84-4c22-8063-a8dd7f7927fa",
                "from": {
                    "nodeId": "2",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "3",
                    "portId": "input"
                },
                "properties": {}
            },
            "2c67905f-6d15-4f68-b38d-e0cfa9efdc14": {
                "id": "2c67905f-6d15-4f68-b38d-e0cfa9efdc14",
                "from": {
                    "nodeId": "0",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "1",
                    "portId": "input"
                },
                "properties": {}
            },
            "f74e3098-de60-4f63-b601-7abe187a103e": {
                "id": "f74e3098-de60-4f63-b601-7abe187a103e",
                "from": {
                    "nodeId": "4",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "5",
                    "portId": "input"
                },
                "properties": {}
            },
            "66b06f56-90d8-4fb1-b117-8a5f75358e1d": {
                "id": "66b06f56-90d8-4fb1-b117-8a5f75358e1d",
                "from": {
                    "nodeId": "8",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "2",
                    "portId": "input"
                },
                "properties": {}
            },
            "824bc5ba-d25d-4071-b43c-9da4b4a385ee": {
                "id": "824bc5ba-d25d-4071-b43c-9da4b4a385ee",
                "from": {
                    "nodeId": "9",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "7",
                    "portId": "input"
                },
                "properties": {
                    "option": "True"
                }
            },
            "2ce608df-55c8-4c53-a3da-d99a1ffeab9d": {
                "id": "2ce608df-55c8-4c53-a3da-d99a1ffeab9d",
                "from": {
                    "nodeId": "10",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "11",
                    "portId": "input"
                },
                "properties": {}
            },
            "afa1b2b4-38b1-4941-ac3e-ea1e245e8292": {
                "id": "afa1b2b4-38b1-4941-ac3e-ea1e245e8292",
                "from": {
                    "nodeId": "11",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "12",
                    "portId": "input"
                },
                "properties": {}
            },
            "38d8c708-8435-4fdd-b437-089941bd22e2": {
                "id": "38d8c708-8435-4fdd-b437-089941bd22e2",
                "from": {
                    "nodeId": "7",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "6",
                    "portId": "input"
                },
                "properties": {}
            },
            "a243f37b-3ebc-4b8f-9c63-20217a3edab3": {
                "id": "a243f37b-3ebc-4b8f-9c63-20217a3edab3",
                "from": {
                    "nodeId": "12",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "4",
                    "portId": "input"
                },
                "properties": {}
            },
            "27c11cde-c48b-47c6-8f11-f7d77979eaf3": {
                "id": "27c11cde-c48b-47c6-8f11-f7d77979eaf3",
                "from": {
                    "nodeId": "3",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "9",
                    "portId": "input"
                },
                "properties": {}
            },
            "3dc00f4f-726e-4850-a307-baa8978dcdbf": {
                "id": "3dc00f4f-726e-4850-a307-baa8978dcdbf",
                "from": {
                    "nodeId": "6",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "10",
                    "portId": "input"
                },
                "properties": {}
            },
            "35fc4c0c-e7c4-4686-a565-6b3317bead7f": {
                "id": "35fc4c0c-e7c4-4686-a565-6b3317bead7f",
                "from": {
                    "nodeId": "1",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "8",
                    "portId": "input"
                },
                "properties": {}
            }
        }
    }
}