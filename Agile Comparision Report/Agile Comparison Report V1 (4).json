{
    "id": "4069eb28-26fa-416b-8d98-02da647ad3d7",
    "permanent_id": "c9f7f030-bf7e-453d-a9ae-e5417cf2c7a7",
    "name": "Agile Comparison Report V1",
    "description": "Agile Comparison Report V1",
    "trigger_type": "scheduled",
    "trigger_template_type": "scheduled",
    "enabled": true,
    "nodes_dirty": true,
    "ui_data": {
        "nodes": {
            "0": {
                "id": "0",
                "type": "trigger",
                "description": "Scheduled - Trigger for playbooks to run on a specific schedule.",
                "ports": {
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "cron": {
                        "key": "cron",
                        "type": "text",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Schedule",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "index": 0
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "type": "text",
                        "values": [
                            {
                                "value": "-1",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "options": [],
                        "default_value": "",
                        "display_name": "Interval in minutes",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "index": 0
                    }
                },
                "output": {
                    "cron": {
                        "key": "cron",
                        "display_name": "Schedule",
                        "type": "text",
                        "description": "Specify a schedule using the UNIX cron format to trigger the playbook (the playbook won't run until the cron triggers for the first time).",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    },
                    "interval_in_min": {
                        "key": "interval_in_min",
                        "display_name": "Interval in minutes",
                        "type": "text",
                        "description": "If Schedule is not specified, choose an interval in minutes to trigger the playbook periodically, starting immediately. Use -1 as a special value to trigger the playbook only once. It will trigger again every time the playbook is updated.",
                        "options": [],
                        "required": false,
                        "hidden": false,
                        "validation": "",
                        "default_value": ""
                    }
                },
                "options": [],
                "position": {
                    "x": 295,
                    "y": 7
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Scheduled",
                "trigger_type": {
                    "label": "manual",
                    "key": "manual"
                },
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "1": {
                "id": "1",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "integration_ids",
                                    "value": "[\"231\"]"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "issues_types",
                                    "value": "[\"BUG\",\"STORY\",\"TASK\"]"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "exclude_issue_types",
                                    "value": "[\"BUG SUB-TASK\", \"SUB-TASK\",  \"TEST PLAN\", \"TEST EXECUTION\", \"SUB TEST EXECUTION\"]"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ou_category_id",
                                    "value": "[\"03fdd9d9-4e26-49fb-8240-2fa4c9fb084c\"]"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "start_ts",
                                    "value": "${17.start_ts} "
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "end_ts",
                                    "value": "${17.end_ts} "
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "/* jshint esversion: 6 */\nfunction handleNode(context) {\n  const issues_types = JSON.parse(context.getParam('issues_types'));\n  const exclude_issue_types = JSON.parse(context.getParam('exclude_issue_types'));\n  const integration_ids = JSON.parse(context.getParam('integration_ids'));\n  const ou_category_id = JSON.parse(context.getParam('ou_category_id'));\n  const start_ts = context.getParam('start_ts');\n  const end_ts = context.getParam('end_ts');\n  const date = new Date();\n  const firstDay = new Date(date.getFullYear(), date.getMonth() - 1, 1).getTime() /  1000;\n  const lastDay = new Date(date.getFullYear(), date.getMonth(), 0).getTime() / 1000;\n  // date.setMonth(date.getMonth()-1);\n const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n  const previousMonth = monthNames[date.getMonth()];\n  return { \n    state : 'success',\n    output : {\n      issue_types: issues_types,\n      ou_category_id: ou_category_id,\n      exclude_issue_types: exclude_issue_types,\n      integration_ids: integration_ids,\n      firstDay: start_ts,\n      lastDay: end_ts,\n      month: previousMonth.toString() + ' ' + date.getFullYear(),\n      currDate: getFormattedDate(new Date())\n    }\n  };\n}\n\nfunction getFormattedDate(date) {\n  var year = date.getFullYear();\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : '0' + month;\n  var day = date.getDate().toString();\n  day = day.length > 1 ? day : '0' + day;\n  return month + '/' + day + '/' + year;\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 296,
                    "y": 199
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Parameters",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "2": {
                "id": "2",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_fields/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\"filter\":{\"integration_ids\":${1.integration_ids}},\"page\":0,\"page_size\":1000}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 298,
                    "y": 283
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get Jira Fields",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "3": {
                "id": "3",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "custom_fields",
                                    "value": "${2.json_body.records} "
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ou_ids",
                                    "value": "${4.json_body.records} "
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "/* jshint esversion: 6 */\nfunction handleNode(context) {\n  const custom_fields = JSON.parse(context.getParam('custom_fields'));\n  let ou_ids = JSON.parse(context.getParam('ou_ids'));\n  // const parentOus = [195, 192,124,146,167,152,129,157];\n  //let parentOus = ou_ids.map(item => item.parent_ref_id);\n  //parentOus = [...new Set(parentOus)];\n// \tparentOus.push(40); // ou with issue\n  //ou_ids = ou_ids.filter(item => !parentOus.includes(+item.id));\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  // ou_ids = ou_ids.filter(item => item.id == 138);\n  const ac  = custom_fields.find(item => item.name === 'Acceptance Criteria').field_key;\n  const sprint = custom_fields.find(item => item.name === 'Sprint').field_key; \n  const sp = custom_fields.find(item => item.name === 'Story Points').field_key;\n  return { \n    state : 'success',\n    output : { \n      'ou_ids': ou_ids,\n      'ac' : ac,\n      'sp': sp,\n      'sprint_custom_key': sprint\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 298,
                    "y": 457
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Filter OU's / Custom Field",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "4": {
                "id": "4",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/org/units/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n  \"page\": 0,\n  \"page_size\": 500,\n  \"filter\": {\n\"ou_category_id\":${1.ou_category_id}\n}\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 297,
                    "y": 375
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get ALL OU's",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "5": {
                "id": "5",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${3.ou_ids}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_type": "json_blob"
                    }
                },
                "options": [],
                "position": {
                    "x": 296,
                    "y": 539
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Item In List",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "6": {
                "id": "6",
                "type": "tickets_report",
                "description": "Get the jira tickets report based on the filter",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 30
                    },
                    "api_key": {
                        "key": "api_key",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach PRs List API.",
                        "index": 20
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n  \"page_size\": 1000,\n  \"page\": 0,\n  \"across\": \"project\",\n  \"filter\": {\n    \"exclude\": {\n      \"custom_fields\": {},\n      \"issue_types\": ${1.exclude_issue_types}\n    },\n    \"custom_fields\": {\n        \"${3.sprint_custom_key}\" : [\"${19.item.additional_key}\"]\n    },\n    \"hideScore\": false,\n    \"integration_ids\": ${1.integration_ids},\n    \"missing_fields\": {},\n    \"issue_types\": ${1.issue_types},\n    \"hygiene_types\": [\"POOR_DESCRIPTION\"]\n  },\n  \"ou_ids\": [\n    \"${5.item.id}\"\n  ],\n  \"ou_user_filter_designation\": {\n    \"sprint\": [\n        \"${3.sprint_custom_key}\"\n    ]\n  }\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 10
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 284,
                    "y": 832
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "POOR DESCRIPTION",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "7": {
                "id": "7",
                "type": "jira_list",
                "description": "List the Jira Issues based on the filter",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 30
                    },
                    "api_key": {
                        "key": "api_key",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach PRs List API.",
                        "index": 20
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"across\": \"project\",\n    \"filter\": {\n      \"hideScore\": false,\n      \"custom_fields\": {\n        \"${3.sprint_custom_key}\" : [\"${19.item.additional_key}\"]\n      },\n      \"integration_ids\": ${1.integration_ids},\n      \"issue_types\": ${1.issue_types},\n      \"hygiene_types\": [\n        \"NO_ASSIGNEE\"\n      ]\n    },\n    \"ou_ids\": [\n      \"${5.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n      \"sprint\": [\n        \"${3.sprint_custom_key}\"\n      ]\n    }\n  }",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 10
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 282,
                    "y": 930
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Orphan Story",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "8": {
                "id": "8",
                "type": "jira_list",
                "description": "List the Jira Issues based on the filter",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 30
                    },
                    "api_key": {
                        "key": "api_key",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach PRs List API.",
                        "index": 20
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page_size\": 1000,\n    \"page\": 0,\n    \"across\": \"project\",\n    \"filter\": {\n      \"issue_types\": ${1.issue_types},\n      \"custom_fields\": {},\n      \"hideScore\": false,\n      \"integration_ids\": ${1.integration_ids},\n      \"custom_fields\": {\n        \"${3.sprint_custom_key}\" : [\"${19.item.additional_key}\"]\n      },\n      \"missing_fields\": {},\n      \"story_points\":{\"$gt\":\"5\"},\n      \"hygiene_types\": []\n    },\n    \"ou_ids\": [\n      \"${5.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n      \"sprint\": [\n          \"${3.sprint_custom_key}\"\n      ]\n    }\n  }",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 10
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 279,
                    "y": 1013
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Large Stories",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "9": {
                "id": "9",
                "type": "jira_list",
                "description": "List the Jira Issues based on the filter",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 30
                    },
                    "api_key": {
                        "key": "api_key",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach PRs List API.",
                        "index": 20
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"page_size\": 1000,\n    \"page\": 0,\n    \"across\": \"project\",\n    \"filter\": {\n      \"exclude\": {\n        \"custom_fields\": {}\n      },\n      \"issue_types\": ${1.issue_types},\n      \"custom_fields\": {\n        \"${3.sprint_custom_key}\" : [\"${19.item.additional_key}\"]\n      },\n      \"hideScore\": false,\n      \"integration_ids\": ${1.integration_ids},\n      \"missing_fields\": {\n        \"${3.sp}\": true\n      },\n      \"hygiene_types\": []\n    },\n    \"ou_ids\": [\n      \"${5.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n      \"sprint\": [\n          \"${3.sprint_custom_key}\"\n      ]\n    }\n  }",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 10
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 273,
                    "y": 1097
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Missing Story Points",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "10": {
                "id": "10",
                "type": "jira_list",
                "description": "List the Jira Issues based on the filter",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 30
                    },
                    "api_key": {
                        "key": "api_key",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach PRs List API.",
                        "index": 20
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "\n  {\n    \"page_size\": 1000,\n    \"page\": 0,\n    \"across\": \"project\",\n    \"filter\": {\n      \"exclude\": {\n        \"custom_fields\": {},\n        \"issue_types\": ${1.exclude_issue_types}\n      },\n      \"issue_types\": ${1.issue_types},\n      \"custom_fields\": {\n        \"${3.sprint_custom_key}\" : [\"${19.item.additional_key}\"]\n      },\n      \"hideScore\": false,\n      \"integration_ids\": ${1.integration_ids},\n      \"missing_fields\": {\n        \"${3.ac}\": true\n      },\n      \"hygiene_types\": []\n    },\n    \"ou_ids\": [\n      \"${5.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n      \"sprint\": [\n          \"${3.sprint_custom_key}\"\n      ]\n    }\n  }",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 10
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 271,
                    "y": 1176
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "AC Missing",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "11": {
                "id": "11",
                "type": "jira_list",
                "description": "List the Jira Issues based on the filter",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 30
                    },
                    "api_key": {
                        "key": "api_key",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach PRs List API.",
                        "index": 20
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "\n  {\n    \"across\": \"project\",\n    \"filter\": {\n      \"hideScore\": false,\n      \"issue_types\": ${1.issue_types},\n      \"integration_ids\": ${1.integration_ids},\n      \"custom_fields\": {\n        \"${3.sprint_custom_key}\" : [\"${19.item.additional_key}\"]\n      },\n      \"hygiene_types\": [\n        \"IDLE\"\n      ]\n    },\n    \"ou_ids\": [\n      \"${5.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n      \"sprint\": [\n        \"${3.sprint_custom_key}\"\n      ]\n    }\n  }",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 10
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 261,
                    "y": 1256
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Idle",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "12": {
                "id": "12",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/resolution_time_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n        \"metric\": [\n            \"median_resolution_time\",\n            \"number_of_tickets_closed\"\n        ],\n        \"sort_xaxis\": \"label_low-high\",\n        \"custom_fields\": {\n            \"customfield_10300\": [\n                \"${19.item.additional_key}\"\n            ]\n        },\n        \"exclude\": {\n        },\n       \"integration_ids\": ${1.integration_ids}\n    },\n    \"across\": \"customfield_10002\",\n    \"across_limit\": 20,\n    \"sort\": [\n        {\n            \"id\": \"custom_field\",\n            \"desc\": false\n        }\n    ],\n    \"ou_ids\": [\n        \"138\"\n    ],\n    \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"customfield_10300\"\n        ]\n    },\n    \"widget_id\": \"64bc0020-44c2-11ed-9995-f95853582bbe\"\n}",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 261,
                    "y": 1344
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get resolution_time_report",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "14": {
                "id": "14",
                "type": "script",
                "description": "Custom logic using JavaScript",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "parameters": {
                        "key": "parameters",
                        "type": "kv",
                        "values": [
                            {
                                "value": {
                                    "key": "resolution_time_report",
                                    "value": "${12.json_body.records} "
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "velocity_response",
                                    "value": ""
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "missing_fix_version",
                                    "value": "${6.body} "
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "orphan_story",
                                    "value": "${7.body} "
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "large_stories",
                                    "value": "${8.body} "
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "missing_story_points",
                                    "value": "${9.body} "
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ac_missing",
                                    "value": "${10.body} "
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "idle",
                                    "value": "${11.body}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "total",
                                    "value": "${15.body} "
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ou",
                                    "value": "${5.item.id}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "sprint_custom_key",
                                    "value": "${3.sprint_custom_key}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "month",
                                    "value": "${1.month}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "ou_team",
                                    "value": "${5.item.path}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "sprint_name",
                                    "value": "${19.item.additional_key}"
                                },
                                "type": "json"
                            },
                            {
                                "value": {
                                    "key": "sprint_details",
                                    "value": "${19.item}"
                                },
                                "type": "json"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Input Parameters",
                        "description": "Specify input parameters that will be available within the script.",
                        "index": 10
                    },
                    "script": {
                        "key": "script",
                        "type": "text-editor",
                        "values": [
                            {
                                "value": "/* jshint  esversion: 10 */\n\nfunction getFormattedDate(date) {\n  var year = date.getFullYear();\n\n  var month = (1 + date.getMonth()).toString();\n  month = month.length > 1 ? month : '0' + month;\n\n  var day = date.getDate().toString();\n  day = day.length > 1 ? day : '0' + day;\n  \n  return month + '/' + day + '/' + year;\n}\n// missing fix version is mapped with poor description\nconst HygieneWeights = {\n  missing_fix_verion: 15,\n  orphan_story: 15,\n  large_stories: 15,\n  story_points_missing: 20,\n  ac_missing: 15,\n  idle: 15\n};\n\nfunction getScoreFromPercent (val) {\n  if (val === 0) {\n    return 100;\n  }\n  if (val > 0 && val <= 11) {\n    return 75;\n  }\n  if (val > 11 && val <= 21) {\n    return 55;\n  }\n  if (val > 21 && val <= 31) {\n    return 30;\n  }\n  if (val > 31 && val <= 41) {\n    return 10;\n  }\n  return 5;\n}\n\nfunction getScore (tickets, totalTickets, weight) {\n  if (totalTickets === 0) {\n    return 0;\n  }\n  const percent = (tickets / totalTickets) * 100;\n  const scoreFromPercent = getScoreFromPercent(percent);\n  const score = (scoreFromPercent * weight) / 100;\n  //console.log(` ${totalTickets} ${tickets} percent ${scoreFromPercent} weight ${weight} score ${score}`);\n  return score;\n}\n\nfunction handleNode(context) {\n  const resolution_time_report = JSON.parse(context.getParam('resolution_time_report'));\n  //const velocity_response = JSON.parse(context.getParam('velocity_response'));\n  const month = context.getParam('month');\n  const ou_team = context.getParam('ou_team'); \n  const sprint_name = context.getParam('sprint_name');\n  //const cycle_time = velocity_response.reduce((sum, ittr) => sum + ittr.mean, 0);\n  //const inProgress = velocity_response.filter(item => item.key ==\"In Progress\");\n  //const testing = velocity_response.filter(item => item.key ==\"Testing\");\n  \n  const ou = context.getParam('ou');\n  const sprint_custom_key = context.getParam('sprint_custom_key');\n  const total = JSON.parse(context.getParam('total'));\n  const fix_version = JSON.parse(context.getParam('missing_fix_version'));\n  const large_stories = JSON.parse(context.getParam('large_stories'));\n  const orphan_story = JSON.parse(context.getParam('orphan_story'));\n  const missing_story_points = JSON.parse(context.getParam('missing_story_points'));\n  const idle = JSON.parse(context.getParam('idle'));\n  const ac_missing = JSON.parse(context.getParam('ac_missing'));\n  const sprint_details = JSON.parse(context.getParam('sprint_details'));\n  const total_issues = sprint_details.total_issues;\n  var sprint_response = [sprint_details];\n  let sprint = sprint_name;\n  // if(total.records.length) {\n  // const issue = total.records[0];\n   // sprint = issue.custom_fields[sprint_custom_key] ? issue.custom_fields[sprint_custom_key][issue.custom_fields[sprint_custom_key].length -1]: '--';\n  // }\n   var score = getScore(fix_version.count, total_issues, HygieneWeights.missing_fix_verion);\n  score = score + getScore(large_stories._metadata.total_count, total_issues, HygieneWeights.large_stories);\n  score = score + getScore(orphan_story._metadata.total_count, total_issues, HygieneWeights.orphan_story);\n  score = score + getScore(missing_story_points._metadata.total_count, total_issues, HygieneWeights.story_points_missing);\n  score = score + getScore(ac_missing._metadata.total_count, total_issues, HygieneWeights.ac_missing);\n  score = score + getScore(idle._metadata.total_count, total_issues, HygieneWeights.idle);\n  var sum_delivered_story_points = sprint_response.length ? sprint_response.reduce((sum,b) => sum + b.delivered_story_points,0) : 0;\n  var sum_committed_story_points = sprint_response.length ? sprint_response.reduce((sum,b) => sum + b.committed_story_points, 0) : 0;\n  var committed_story_points =   sprint_response.filter(item => item.committed_story_points);\n  var creep_story_points =   sprint_response.filter(item => item.creep_story_points);\n  var delivered_story_points =   sprint_response.filter(item => item.delivered_story_points);\n  var date = new Date(sprint_details.key * 1000);\n  var fulldate  = (date.getMonth() + 1) + '/' + (date.getDate()) + '/' + date.getFullYear();\n  \nvar one = resolution_time_report.find(item => item.key == '1.0');\nvar two = resolution_time_report.find(item => item.key == '2.0');\nvar three = resolution_time_report.find(item => item.key == '3.0');\nvar five = resolution_time_report.find(item => item.key == '5.0');\nvar eight = resolution_time_report.find(item => item.key == '8.0');\nvar thirteen = resolution_time_report.find(item => item.key == '13.0');\n\n  const row = {\n    \t\"0\": sprint,\n  \t\t\"1\": fulldate,\n    \t\"2\": ou,\n    \t\"3\": ou_team,\n    \t\"4\": sprint_details.delivered_keys.length || '--',\n    \t\"5\": score,\n    \t\"6\": sprint_details ? Math.round((sprint_details.delivered_story_points / sprint_details.committed_story_points) * 100): '--',\n    \t\"7\": sprint_details ? Math.round((sprint_details.creep_story_points / sprint_details.committed_story_points) * 100) : '--',\n    \t\"8\": sprint_details ? sprint_details.delivered_story_points : '--',\n    \t\"9\": sprint_details ? sprint_details.committed_story_points : '--',\n    \t//\"11\": (inProgress[0].mean/(60*60*24)).toFixed(1),\n    \t//\"12\": (testing[0].mean/(60*60*24)).toFixed(1),\n    \t\"10\": total_issues,\n    \t\"11\": idle._metadata.total_count,\n    \t\"12\": missing_story_points._metadata.total_count,\n    \t\"13\": large_stories._metadata.total_count,\n    \t\"14\": ac_missing._metadata.total_count,\n    \t\"15\": fix_version.count,\n    \t\"16\": orphan_story._metadata.total_count,\n        \"17\": sprint_details.creep_story_points,\n        \"18\": sprint_details.creep_keys.length || '--',\n    \t//\"22\" : cycle_time ? (cycle_time/(60*60*24)).toFixed(1)  : '--',\n  };\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'sprint_response' : sprint_response,\n      'row': row\n    } \n  };\n}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "default_value": "prefix = 'hello ';\nfunction handleNode(context) {\n  name = context.getParam('name');\n  // levelops.serviceName().doSomething() - invoke a levelops service\n  return { \n    state : 'success',\n    output : { \n      'message' : prefix + name  \n    } \n  };\n}",
                        "display_name": "Script",
                        "description": "Write some custom logic using JavaScript.",
                        "index": 20
                    }
                },
                "output": {},
                "options": [],
                "position": {
                    "x": 268,
                    "y": 1577
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Response Mapping",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "15": {
                "id": "15",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "/v1/jira_issues/list",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": " {\n        \"filter\": {\n        \"hideScore\": false,\n        \"custom_fields\": {\n        \"${3.sprint_custom_key}\" : [\"${19.item.additional_key}\"]\n      },\n        \"integration_ids\": ${1.integration_ids}\n        },\n        \"across\": \"hygiene_type\",\n        \"ou_ids\": [\n            \"${5.item.id}\"\n        ],\n        \"ou_user_filter_designation\": {\n        \"sprint\": [\n            \"${3.sprint_custom_key}\"\n        ]\n        }\n    }",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 267,
                    "y": 1460
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get All Tickets",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "16": {
                "id": "16",
                "type": "insert_config_table",
                "description": "Insert a row in the LevelOps Table",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "config_table": {
                        "key": "config_table",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "config_tables",
                        "display_name": "Table",
                        "description": "",
                        "index": 10
                    },
                    "config_row": {
                        "key": "config_row",
                        "type": "text",
                        "values": [
                            {
                                "value": "${14.row}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Row",
                        "description": "Create a row",
                        "index": 20
                    }
                },
                "output": {
                    "config_row": {
                        "key": "config_row",
                        "display_name": "config_row",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 270,
                    "y": 1696
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Insert Row in LevelOps Table",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "17": {
                "id": "17",
                "type": "get_time_range",
                "description": "Get the start and end timestamps based on the specified time period",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "truncate": {
                        "key": "truncate",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Truncate To Day",
                        "index": 20
                    },
                    "time_period": {
                        "key": "time_period",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "Last_Month",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "Last_Day",
                            "Last_Week",
                            "Last_Month",
                            "Last_Quarter",
                            "Last_Six_Months",
                            "Last_Year"
                        ],
                        "default_value": "Last_Day",
                        "display_name": "Time Period",
                        "description": "Time period to get the start and end timestamps.",
                        "index": 10
                    }
                },
                "output": {
                    "end_ts": {
                        "key": "end_ts",
                        "display_name": "end_ts",
                        "value_type": "string",
                        "hidden": false
                    },
                    "start_ts": {
                        "key": "start_ts",
                        "display_name": "start_ts",
                        "value_type": "string",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 292,
                    "y": 103
                },
                "properties": {
                    "icon": "clock-circle"
                },
                "name": "Get Time Range In Epoch",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "18": {
                "id": "18",
                "type": "levelops_query",
                "description": "Make a call to a Levelops Query",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "ignore_errors": {
                        "key": "ignore_errors",
                        "type": "radio-group",
                        "values": [
                            {
                                "value": "Yes",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [
                            "Yes",
                            "No"
                        ],
                        "default_value": "Yes",
                        "display_name": "Ignore errors",
                        "description": "If Yes, this node will succeed regardless of the API response",
                        "index": 80
                    },
                    "headers": {
                        "key": "headers",
                        "type": "kv",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Headers",
                        "index": 30
                    },
                    "path": {
                        "key": "path",
                        "type": "text",
                        "values": [
                            {
                                "value": "v1/jira_issues/sprint_metrics_report",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Path",
                        "description": "Path appended to the base URL",
                        "index": 20
                    },
                    "password": {
                        "key": "password",
                        "type": "password_string",
                        "values": [],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "Api Key",
                        "description": "Api key for Authentication to reach Levelops Query.",
                        "index": 70
                    },
                    "integration_id": {
                        "key": "integration_id",
                        "type": "single-dynamic-select",
                        "values": [],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "dynamic_resource_name": "integrations",
                        "display_name": "Satellite Integration",
                        "description": "Pick a satellite integration to make the call from. If not specified, LevelOps will only be able to reach public APIs.",
                        "index": 60
                    },
                    "content_type": {
                        "key": "content_type",
                        "type": "text",
                        "values": [
                            {
                                "value": "application/json",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Content Type",
                        "description": "Content type of the body (for example: \"application/json\")",
                        "index": 40
                    },
                    "method": {
                        "key": "method",
                        "type": "single-select",
                        "values": [
                            {
                                "value": "POST",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE"
                        ],
                        "default_value": "GET",
                        "display_name": "Method",
                        "index": 10
                    },
                    "body": {
                        "key": "body",
                        "type": "text-area",
                        "values": [
                            {
                                "value": "{\n    \"filter\": {\n      \"include_issue_keys\": true,\n      \"agg_type\": \"average\",\n      \"completed_at\": {\n        \"$gt\": \"${1.firstDay}\",\n        \"$lt\": \"${1.lastDay}\"\n      },\n      \"integration_ids\": ${1.integration_ids}\n    },\n    \"ou_ids\": [\n      \"${5.item.id}\"\n    ],\n    \"ou_user_filter_designation\": {\n      \"sprint\": [\n        \"sprint_report\"\n      ]\n    },\n    \"ou_exclusions\": [],\n    \"page\": 0,\n    \"page_size\": 1000\n  }",
                                "type": "string"
                            }
                        ],
                        "required": false,
                        "hidden": false,
                        "options": [],
                        "display_name": "Body",
                        "index": 50
                    }
                },
                "output": {
                    "body": {
                        "key": "body",
                        "display_name": "body",
                        "hidden": false
                    },
                    "code": {
                        "key": "code",
                        "display_name": "code",
                        "hidden": false
                    },
                    "json_body": {
                        "key": "json_body",
                        "display_name": "json_body",
                        "value_type": "json_blob",
                        "hidden": false
                    }
                },
                "options": [],
                "position": {
                    "x": 292,
                    "y": 637
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "Get Completed Sprints",
                "size": {
                    "width": 320,
                    "height": 124
                }
            },
            "19": {
                "id": "19",
                "type": "for_each",
                "description": "Iterate over items in a given list variable",
                "ports": {
                    "input": {
                        "id": "input",
                        "type": "input",
                        "properties": {
                            "action": "input"
                        },
                        "position": {
                            "x": 131,
                            "y": 0
                        }
                    },
                    "output": {
                        "id": "output",
                        "type": "output",
                        "properties": {
                            "action": "output"
                        },
                        "position": {
                            "x": 131,
                            "y": 78
                        }
                    }
                },
                "input": {
                    "list": {
                        "key": "list",
                        "type": "variable-select",
                        "values": [
                            {
                                "value": "${18.json_body.records}",
                                "type": "string"
                            }
                        ],
                        "required": true,
                        "hidden": false,
                        "options": [],
                        "display_name": "list",
                        "description": "Select a variable that contains a list of items",
                        "index": 10
                    }
                },
                "output": {
                    "item": {
                        "key": "item",
                        "display_name": "item",
                        "value_type": "json_blob",
                        "hidden": false,
                        "content_type_from_input": "list",
                        "content_schema": {}
                    }
                },
                "options": [],
                "position": {
                    "x": 290,
                    "y": 725
                },
                "properties": {
                    "icon": "levelops"
                },
                "name": "For Each Item In List",
                "size": {
                    "width": 320,
                    "height": 124
                }
            }
        },
        "links": {
            "559b9e5e-b976-41c2-a862-6abd864c4ac0": {
                "id": "559b9e5e-b976-41c2-a862-6abd864c4ac0",
                "from": {
                    "nodeId": "15",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "14",
                    "portId": "input"
                },
                "properties": {}
            },
            "7ca0428b-b6dc-4fe2-8a1e-79aaa830d96c": {
                "id": "7ca0428b-b6dc-4fe2-8a1e-79aaa830d96c",
                "from": {
                    "nodeId": "5",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "18",
                    "portId": "input"
                },
                "properties": {}
            },
            "888e5815-9a78-4b7c-b301-c21a0cbf827a": {
                "id": "888e5815-9a78-4b7c-b301-c21a0cbf827a",
                "from": {
                    "nodeId": "12",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "15",
                    "portId": "input"
                },
                "properties": {}
            },
            "54cf3c65-cc19-473a-a4ec-4cca9a58f541": {
                "id": "54cf3c65-cc19-473a-a4ec-4cca9a58f541",
                "from": {
                    "nodeId": "3",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "5",
                    "portId": "input"
                },
                "properties": {}
            },
            "ad76dbcb-3d89-4c3a-88f5-39501577e281": {
                "id": "ad76dbcb-3d89-4c3a-88f5-39501577e281",
                "from": {
                    "nodeId": "9",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "10",
                    "portId": "input"
                },
                "properties": {}
            },
            "fc51d9e5-9213-4b2d-8296-ecba54e5672f": {
                "id": "fc51d9e5-9213-4b2d-8296-ecba54e5672f",
                "from": {
                    "nodeId": "14",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "16",
                    "portId": "input"
                },
                "properties": {}
            },
            "097c472c-b0ab-4357-83d5-62686b57fafd": {
                "id": "097c472c-b0ab-4357-83d5-62686b57fafd",
                "from": {
                    "nodeId": "0",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "17",
                    "portId": "input"
                },
                "properties": {}
            },
            "33cf7a08-7180-42e1-a6d8-64ae56fc97f8": {
                "id": "33cf7a08-7180-42e1-a6d8-64ae56fc97f8",
                "from": {
                    "nodeId": "17",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "1",
                    "portId": "input"
                },
                "properties": {}
            },
            "e33a73fe-62b7-423f-9df7-e6959389f429": {
                "id": "e33a73fe-62b7-423f-9df7-e6959389f429",
                "from": {
                    "nodeId": "6",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "7",
                    "portId": "input"
                },
                "properties": {}
            },
            "cd85d46f-68f4-4cc3-86e3-0a281b29a38b": {
                "id": "cd85d46f-68f4-4cc3-86e3-0a281b29a38b",
                "from": {
                    "nodeId": "10",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "11",
                    "portId": "input"
                },
                "properties": {}
            },
            "bd50e0e6-6b3c-4c84-9219-4a313efe5b43": {
                "id": "bd50e0e6-6b3c-4c84-9219-4a313efe5b43",
                "from": {
                    "nodeId": "11",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "12",
                    "portId": "input"
                },
                "properties": {}
            },
            "54172ca4-39ec-4e31-94e3-07d957ae2c40": {
                "id": "54172ca4-39ec-4e31-94e3-07d957ae2c40",
                "from": {
                    "nodeId": "7",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "8",
                    "portId": "input"
                },
                "properties": {}
            },
            "70c5c1e7-26f1-436d-b6fc-c9bba96babd3": {
                "id": "70c5c1e7-26f1-436d-b6fc-c9bba96babd3",
                "from": {
                    "nodeId": "4",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "3",
                    "portId": "input"
                },
                "properties": {}
            },
            "5dc1a7dd-2304-454f-8cc0-1c9b646f2bd7": {
                "id": "5dc1a7dd-2304-454f-8cc0-1c9b646f2bd7",
                "from": {
                    "nodeId": "2",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "4",
                    "portId": "input"
                },
                "properties": {}
            },
            "ac5bf10a-d6c4-474d-98eb-0763cf9f7336": {
                "id": "ac5bf10a-d6c4-474d-98eb-0763cf9f7336",
                "from": {
                    "nodeId": "1",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "2",
                    "portId": "input"
                },
                "properties": {}
            },
            "65e096a7-0a52-46b8-804d-abb09d72e8b8": {
                "id": "65e096a7-0a52-46b8-804d-abb09d72e8b8",
                "from": {
                    "nodeId": "8",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "9",
                    "portId": "input"
                },
                "properties": {}
            },
            "693f8743-d0d4-4661-be12-2c1b20fe24d8": {
                "id": "693f8743-d0d4-4661-be12-2c1b20fe24d8",
                "from": {
                    "nodeId": "18",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "19",
                    "portId": "input"
                },
                "properties": {}
            },
            "e4e160b8-4756-42ce-9f00-7924530e4faf": {
                "id": "e4e160b8-4756-42ce-9f00-7924530e4faf",
                "from": {
                    "nodeId": "19",
                    "portId": "output"
                },
                "to": {
                    "nodeId": "6",
                    "portId": "input"
                },
                "properties": {}
            }
        }
    }
}